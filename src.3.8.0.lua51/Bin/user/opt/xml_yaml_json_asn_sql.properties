# Define Scite settings for DataStorage Languages XML/vXML, Yaml, Json and SQL Files

file.patterns.xml=*.vxml;*.xml;*.xsl;*.svg;*.xul;*.xsd;*.dtd;*.xslt;*.axl;*.xrc;*.rdf*.ent;*.rels;*.kml
lexer.$(file.patterns.xml)=xml

#*language.xml=&XML/vXML|||
*filter.xml=XML ( xml vxml )|$(file.patterns.xml)|\
*source.patterns.xml=$(file.patterns.xml);

api.$(file.patterns.xml)=$(SciteUserHome)/user/xml.api
autocomplete.xml.start.characters=$(chars.alpha)$(chars.numeric)$/
autocomplete.xml.ignorecase=1
autocomplete.xml.choose.single=0
autocomplete.xml.fillups=(

vxml.elements=\
assign audio block break catch choice clear disconnect else elseif \
emphasis enumerate error exit field filled form goto grammar help \
if initial link log menu meta noinput nomatch object option p paragraph \
param phoneme prompt property prosody record reprompt return s say-as \
script sentence subdialog submit throw transfer value var voice vxml

vxml.attributes=\
accept age alphabet anchor application base beep bridge category charset \
classid cond connecttimeout content contour count dest destexpr dtmf dtmfterm \
duration enctype event eventexpr expr expritem fetchtimeout finalsilence \
gender http-equiv id level maxage maxstale maxtime message messageexpr \
method mime modal mode name namelist next nextitem ph pitch range rate \
scope size sizeexpr skiplist slot src srcexpr sub time timeexpr timeout \
transferaudio type value variant version volume xml:lang

keywordclass.vxml=\
$(vxml.elements) $(vxml.attributes) public !doctype

comment.box.start.xml=
comment.stream.start.xml=

# No keyword for xml, as it accepts any keyword
keywords.$(file.patterns.xml)=
#CDATA  	  The value is character data
#(eval|eval|..)  	  The value must be an enumerated value
#ID  	  The value is an unique id
#IDREF  	  The value is the id of another element
#IDREFS 	  The value is a list of other ids
#NMTOKEN  	  The value is a valid XML name
#NMTOKENS  	  The value is a list of valid XML names
#ENTITY  	  The value is an entity
#ENTITIES  	  The value is a list of entities
#NOTATION  	  The value is a name of a notation
#xml:  	  The value is predefined word.characters.$(file.patterns.xml)=$(chars.alpha)$(chars.numeric)_-


# SGML / DTD keywords
keywords6.$(file.patterns.xml)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION

keywords.$(file.patterns.vxml)=$(keywordclass.vxml)
keywords2.$(file.patterns.vxml)=$(keywordclass.javascript)

word.characters.$(file.patterns.vxml)=$(chars.alpha)$(chars.numeric)_-

# XML: eXtensible Markup Language
# For XML, there is no list of known tags or attributes so all are coloured known

word.characters.$(file.patterns.xml)=$(chars.alpha)$(chars.numeric)_-$
comment.stream.start.xml=<!--
comment.stream.end.xml=-->

# Default
style.xml.32=$(colour.default)
style.xml.0=$(colour.userdefinedliterals)
# Tags
style.xml.1=$(colour.keyword2)
# Unknown Tags
style.xml.2=$(colour.identifier)
# Attributes
style.xml.3=$(colour.userdefinedliterals)
# Unknown Attributes
style.xml.4=$(colour.signal)
# Numbers
style.xml.5=$(colour.number)
# Double quoted strings
style.xml.6=$(colour.string)
# Single quoted strings
style.xml.7=$(colour.char)
# Other inside tag
style.xml.8=$(colour.operator)
# Comment
style.xml.9=$(colour.comment.line)
# Entities
style.xml.10=$(colour.default),$(colour.accent.back)
# XML style tag ends '/>'
style.xml.11=$(colour.default),$(colour.accent.back)
# XML identifier start '<?'
style.xml.12=$(colour.operator),$(colour.accent.back)
# XML identifier end '?>'
style.xml.13=$(colour.operator),$(colour.accent.back)
# CDATA
style.xml.17=$(colour.signal),$(font.text),$(colour.accent.back)
# Question
style.xml.18=$(colour.signal),$(colour.accent.back)
# Unquoted Value
style.xml.19=$(colour.signal),$(colour.accent.back)
# SGML tags <! ... >
style.xml.21=$(colour.signal),$(colour.background)
# SGML command
style.xml.22=$(colour.signal),bold,$(colour.background)
# SGML 1st param
style.xml.23=$(colour.string),$(colour.accent.back)
# SGML double string
style.xml.24=$(colour.string),$(colour.accent.back)
# SGML single string
style.xml.25=$(colour.string),$(colour.accent.back)
# SGML error
style.xml.26=$(colour.error),$(colour.accent.back),eolfilled
# SGML special (#xxxx type)
style.xml.27=fore:#33667A,$(colour.accent.back)
# SGML entity
style.xml.28=fore:#333333,$(colour.accent.back)
# SGML comment
style.xml.29=fore:#808000,$(colour.accent.back)
# SGML block
style.xml.31=fore:#222266,$(colour.accent.back)
# No brace matching in XML
braces.xml.style=31


# Define SciTE settings for YAML files.

# associate YAML file patter with the YAML lexer
file.patterns.yaml=*.yaml;*.yml
filter.yaml=YAML (yaml)|$(file.patterns.yaml)|
*filter.yaml=$(filter.yaml)
#*source.patterns.yaml=$(file.patterns.yaml);
lexer.$(file.patterns.yaml)=yaml
#*language.yaml=YAML|yaml||

# YAML requires spaces for tabs
tabsize.$(file.patterns.yaml)=2
indent.size.$(file.patterns.yaml)=2
use.tabs.$(file.patterns.yaml)=0

# YAML comment character
comment.block.yaml=#~

# YAML convertible values
keywords.$(file.patterns.yaml)=true false yes no

# YAML font styles
# default
style.yaml.0=$(colour.default),$(colour.accent.back)
# comment line
style.yaml.1=$(colour.comment.line),$(colour.accent.back)
# value identifier
style.yaml.2=$(colour.keyword2)
# keyword value
style.yaml.3=$(colour.globalclass)
# numerical value
style.yaml.4=$(colour.number)
# reference/repeating value
style.yaml.5=$(colour.keyword),underlined
# document delimiting line
style.yaml.6=$(colour.globalclass),eolfilled
# text block marker
style.yaml.7=$(colour.comment.line)
# syntax error marker
style.yaml.8=$(colour.error),italics
# operator
style.yaml.9=$(colour.operator),bold

# Define SciTE settings for JSON files.

file.patterns.json=*.json;*.eslintrc;*.jshintrc;*.jsonld
*source.patterns.json=$(file.patterns.json);

filter.json=JSON (json eshintrc jshintrc)|$(file.patterns.json)|
*filter.json=$(filter.json)

lexer.$(file.patterns.json)=json

*language.json=JSON|json||

lexer.json.allow.comments=1
lexer.json.escape.sequence=1

# JSON keywords
keywords.$(file.patterns.json)=false true null

# JSON-LD keywords
keywords2.$(file.patterns.json)=@id @context @type @value @language @container \
@list @set @reverse @index @base @vocab @graph

# Default
style.json.0=$(colour.default)
# Number
style.json.1=$(colour.number)
# String
style.json.2=$(colour.string)
# Unclosed string
style.json.3=$(colour.error),$(colour.accent.back),eolfilled
# Property name
style.json.4=$(colour.keyword2)
# Escape sequence
style.json.5=fore:#0B982E
# Line comment
style.json.6=$(colour.comment),italics
# Block comment
style.json.7=$(style.json.6)
# Operator
style.json.8=$(colour.operator)
# URL/IRI
style.json.9=$(colour.userdefinedliterals)
# JSON-LD compact IRI
style.json.10=fore:#B647B6
# JSON keyword
style.json.11=(colour.keyword),bold
# JSON-LD keyword
style.json.12=fore:#EC2806
# Parsing error
style.json.13=back:#990000


# Define SciTE settings for ASN.1 MIB definition files.
# http://www.ietf.org/rfc/rfc2578.txt

filter.asn1=ASN.1 (asn1)|*.mib|

file.patterns.asn1=*.mib

lexer.$(file.patterns.asn1)=asn1

# ASN.1 styles
# Default
style.asn1.0=$(colour.default)
# Comment
style.asn1.1=$(colour.comment.line)
# Identifiers
style.asn1.2=$(colour.identifier),notitalics,$(font.base)
# Double quoted string
style.asn1.3=$(colour.string)
# Numeric OID definition
style.asn1.4=$(colour.number),bold
# Non OID numbers
style.asn1.5=$(colour.number)
# Keywords
style.asn1.6=$(colour.keyword)
# Attributes
style.asn1.7=$(colour.keyword6)
# Descriptors
style.asn1.8=$(colour.keyword2)
# Types
style.asn1.9=$(colour.globalclass)
# Operators
style.asn1.10=$(colour.operator)

# Keywords
keywords.$(file.patterns.asn1)=\
ACCESS AGENT AUGMENTS \
BEGIN BITS \
CAPABILITIES CHOICE COMPLIANCE CONTACT CONVENTION \
DEFINITIONS DEFVAL DESCRIPTION DISPLAY \
END ENTERPRISE EXPORTS \
FALSE FROM \
GROUP GROUPS \
HINT \
IDENTITY IMPLIED IMPORTS INCLUDES INDEX INFO \
LAST \
MANDATORY MAX MIN MODULE \
NOTATION NOTIFICATION NULL \
OBJECTS OBJECT-TYPE OF ORGANIZATION \
PRODUCT \
RELEASE REFERENCE REQUIRES REVISION \
SEQUENCE SIZE STATUS SUPPORTS SYNTAX \
TEXTUAL TRAP TYPE TRAP-TYPE \
UPDATED \
VALUE VARIABLES VARIATION \
WRITE

# Attributes
keywords2.$(file.patterns.asn1)=\
accessible \
create current \
deprecated \
for \
mandatory \
not notify not-accessible \
obsolete only optional \
read read-only read-write \
write

# Descriptors
keywords3.$(file.patterns.asn1)=\
ABSENT ANY APPLICATION \
BIT BOOLEAN BY \
COMPONENT COMPONENTS \
DEFAULT DEFINED \
ENUMERATED EXPLICIT EXTERNAL \
IMPLICIT INIFINITY \
MAX MIN MINUS \
OPTIONAL \
PRESENT PRIVATE \
REAL \
SET \
TAGS TRUE

# Types
keywords4.$(file.patterns.asn1)=\
Counter Counter32 Counter64 \
DisplayString \
Gauge Gauge32 \
IDENTIFIER INTEGER Integer32 IpAddress \
NetworkAddress NsapAddress \
OBJECT OCTET Opaque \
PhysAddress \
STRING \
TimeTicks \
UInteger32 UNITS Unsigned32

# Define SciTE settings for SQL and PL/SQL files.


file.patterns.sql=*.sql
file.patterns.plsql=*.spec;*.body;*.sps;*.spb;*.sf;*.sp

filter.sql=SQL ( sql psql )|$(file.patterns.sql);$(file.patterns.psql)|
*filter.sql=$(filter.sql)

lexer.$(file.patterns.sql)=sql
lexer.$(file.patterns.plsql)=sql

#*language.sql=S&QL|sql||
#*language.plsql=P&LSQL|spec||

# SQL styles
# White space
style.sql.0=$(colour.default)
# Comment
style.sql.1=$(colour.comment.box)
# Line Comment
style.sql.2=$(colour.comment.line)
# Doc comment
style.sql.3=$(colour.comment.doc)
# Number
style.sql.4=$(colour.number)
# Keyword
style.sql.5=$(colour.keyword)
# Double quoted string
style.sql.6=$(colour.string),$(font.monospace)
# Single quoted string
style.sql.7=$(colour.char),$(font.monospace)
# SQL*Plus
style.sql.8=$(colour.preproc)
# SQL*Plus PROMPT
style.sql.9=$(colour.globalclass),$(font.monospace),back:#E0FFE0,eolfilled
# Operators
style.sql.10=$(colour.operator)
# Identifiers
style.sql.11=$(colour.identifier)
# Not used
#style.sql.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# SQL*Plus Comment
style.sql.13=fore:#007F00,$(font.comment)
# not used
# style.sql.14=
# Hash Line Comment
style.sql.15=$(colour.comment.line),$(font.comment)
# Keywords2: Database objects
style.sql.16=$(colour.globalclass)
# Comment Doc Keyword
style.sql.17=$(colour.comment.doc),$(font.comment.doc)
# Comment Doc Keyword Error
style.sql.18=fore:#804020,$(font.comment.doc)
# Keywords5: User Keywords 1
style.sql.19=$(colour.keyword)
# Keywords6: User Keywords 2
style.sql.20=$(colour.keyword)
# Keywords7: User Keywords 3
style.sql.21=$(colour.keyword)
# Keywords8: User Keywords 4
style.sql.22=$(colour.keyword)
# Quoted identifier
style.sql.23=fore:#DD9900
# Q operator
style.sql.24=fore:#EE00AA

# Braces are only matched in operator style
braces.sql.style=10
# Enables backslash as an escape character
#sql.backslash.escapes=1

# Activate '#' based comments for MySQL with 1 or disable for Oracle with 0:
#lexer.sql.numbersign.comment=0

# Set to 1 to colourise recognized words with dots
# (recommended for Oracle PL/SQL objects)
#lexer.sql.allow.dotted.word=1

#lexer.sql.backticks.identifier=1

#------- copied from SciTEuser.properties

keywords.$(file.patterns.sql1)=after auto_increment comment data local datetime date timestamp time year text enum do handler truncate help start transaction commit rollback savepoint tables function begin end row view identified \
add all alter analyze and as asc asensitive before between bigint binary blob both by call cascade case change char character check collate column condition constraint continue convert create cross current_date current_time current_timestamp current_user cursor database databases day_hour day_microsecond day_minute day_second dec decimal declare default delayed delete desc describe deterministic distinct distinctrow div double drop dual each else elseif enclosed escaped exists exit explain false fetch float float4 float8 for force foreign from fulltext grant group having high_priority hour_microsecond hour_minute hour_second if ignore in index infile inner inout insensitive insert int int1 int2 int3 int4 int8 integer interval into is iterate join key keys kill leading leave left like limit lines load localtime localtimestamp lock long longblob longtext loop low_priority match mediumblob mediumint mediumtext middleint minute_microsecond minute_second mod modifies natural not no_write_to_binlog null numeric on optimize option optionally or order out outer outfile precision primary procedure purge raid0 read reads real references regexp release rename repeat replace require restrict return revoke right rlike schema schemas second_microsecond select sensitive separator set show smallint soname spatial specific sql sqlexception sqlstate sqlwarning sql_big_result sql_calc_found_rows sql_small_result ssl starting straight_join table terminated then tinyblob tinyint tinytext to trailing trigger true undo union unique unlock unsigned update usage use using utc_date utc_time utc_timestamp values varbinary varchar varcharacter varying when where while with write x509 xor year_month zerofill
#---------

keywords.$(file.patterns.sql)=\
absolute action add admin after aggregate \
alias all allocate alter and any are array as asc \
assertion at authorization \
before begin binary bit blob body boolean both breadth by \
call cascade cascaded case cast catalog char character \
check class clob close collate collation column commit \
completion connect connection constraint constraints \
constructor continue corresponding create cross cube current \
current_date current_path current_role current_time current_timestamp \
current_user cursor cycle \
data date day deallocate dec decimal declare default \
deferrable deferred delete depth deref desc describe descriptor \
destroy destructor deterministic dictionary diagnostics disconnect \
distinct domain double drop dynamic \
each else end end-exec equals escape every except \
exception exec execute exists exit external \
false fetch first float for foreign found from free full \
function \
general get global go goto grant group grouping \
having host hour \
identity if ignore immediate in indicator initialize initially \
inner inout input insert int integer intersect interval \
into is isolation iterate \
join \
key \
language large last lateral leading left less level like \
limit local localtime localtimestamp locator \
map match merge minute modifies modify module month \
names national natural nchar nclob new next no none \
not null numeric \
object of off old on only open operation option \
or order ordinality out outer output \
package pad parameter parameters partial path postfix precision prefix \
preorder prepare preserve primary \
prior privileges procedure public \
read reads real recursive ref references referencing relative \
restrict result return returns revoke right \
role rollback rollup routine row rows \
savepoint schema scroll scope search second section select \
sequence session session_user set sets size smallint some| space \
specific specifictype sql sqlexception sqlstate sqlwarning start \
state statement static structure system_user \
table temporary terminate than then time timestamp \
timezone_hour timezone_minute to trailing transaction translation \
treat trigger true \
under union unique unknown \
unnest update usage user using \
value values varchar variable varying view \
when whenever where with without work write \
year \
zone

keywords.$(file.patterns.plsql)=\
all alter and any array as asc at authid avg begin between \
binary_integer \
body boolean bulk by char char_base check close cluster collect \
comment commit compress connect constant create current currval \
cursor date day declare decimal default delete desc distinct \
do drop else elsif end exception exclusive execute exists exit \
extends false fetch float for forall from function goto group \
having heap hour if immediate in index indicator insert integer \
interface intersect interval into is isolation java level like \
limited lock long loop max min minus minute mlslabel mod mode \
month natural naturaln new nextval nocopy not nowait null number \
number_base ocirowid of on opaque open operator option or order \
organization others out package partition pctfree pls_integer \
positive positiven pragma prior private procedure public raise \
range raw real record ref release return reverse rollback row \
rowid rownum rowtype savepoint second select separate set share \
smallint space sql sqlcode sqlerrm start stddev subtype successful \
sum synonym sysdate table then time timestamp to trigger true \
type uid union unique update use user validate values varchar \
varchar2 variance view when whenever where while with work write \
year zone

# Keywords for PlDoc comments
keywords3.$(file.patterns.sql)=\
param author since return see deprecated todo

# Keywords for SQL*Plus
keywords4.$(file.patterns.sql)=\
acc~ept a~ppend archive log attribute \
bre~ak bti~tle \
c~hange cl~ear col~umn comp~ute conn~ect copy \
def~ine del desc~ribe disc~onnect \
e~dit exec~ute exit \
get \
help ho~st \
i~nput \
l~ist \
passw~ord pau~se pri~nt pro~mpt \
quit \
recover rem~ark repf~ooter reph~eader r~un \
sav~e set sho~w shutdown spo~ol sta~rt startup store \
timi~ng tti~tle \
undef~ine \
var~iable \
whenever oserror whenever sqlerror \

# User keywords 1
# Keywords for Standard packages
keywords5.$(file.patterns.sql)=\
dbms_output.disable dbms_output.enable dbms_output.get_line \
dbms_output.get_lines dbms_output.new_line dbms_output.put \
dbms_output.put_line \


