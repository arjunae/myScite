#Define props for bash,powershell,batch
#*language.shell=plShell|sh||
file.patterns.bash=*.sh;*.bsh;configure;*.ksh;*.zsh
filter.bash=Bash (sh bsh)|$(file.patterns.bash)|
*filter.bash=$(filter.bash)
*source.patterns.bash=$(file.patterns.bash);
lexer.$(file.patterns.bash)=bash
shbang.sh=sh
shbang.bash=sh

# generic keywords
bash_keywords1=alias \
ar asa awk banner basename bash bc bdiff break \
bunzip2 bzip2 cal calendar case cat cc cd chmod cksum \
clear cmp col comm compress continue cp cpio crypt \
csplit ctags cut date dc dd declare deroff dev df diff diff3 \
dircmp dirname do done du echo ed egrep elif else env \
esac eval ex exec exit expand export expr false fc \
fgrep fi file find fmt fold for function functions \
getconf getopt getopts grep gres hash head help \
history iconv id if in integer jobs join kill local lc \
let line ln logname look ls m4 mail mailx make \
man mkdir more mt mv newgrp nl nm nohup ntps od \
pack paste patch pathchk pax pcat perl pg pr print \
printf ps pwd read readonly red return rev rm rmdir \
sed select set sh shift size sleep sort spell \
split start stop strings strip stty sum suspend \
sync tail tar tee test then time times touch tr \
trap true tsort tty type typeset ulimit umask unalias \
uname uncompress unexpand uniq unpack unset until \
uudecode uuencode vi vim vpax wait wc whence which \
while who wpaste wstart xargs zcat

# additional keywords from coreutils
bash_keywords2=chgrp chown chroot dir dircolors \
factor groups hostid install link md5sum mkfifo \
mknod nice pinky printenv ptx readlink seq \
sha1sum shred stat su tac unlink users vdir whoami yes

keywords.$(file.patterns.bash)=$(bash_keywords1) $(bash_keywords2)

word.characters.$(file.patterns.bash)=$(chars.alpha)$(chars.numeric)_$@%&

comment.block.bash=#~
colour.bash.heredoc=$(colour.embedded.comment)

# Bash styles
# The bash styles are set to lots of different foreground and background colours as an
# aid to debugging SciTE's Bash lexer - not because this is a good way to display Bash.
style.bash.32=$(colour.default)
# White space
style.bash.0=$(colour.whitespace)
# Error
style.bash.1=$(colour.error)
# Comment
style.bash.2=$(colour.comment.box),$(font.comment.box)
# Number
style.bash.3=$(colour.number)
# Keyword
style.bash.4=$(colour.keyword),$(colour.background)
# Double quoted string
style.bash.5=$(colour.string),$(font.monospace)
# Single quoted string
style.bash.6=$(colour.char),$(font.monospace)
# Operators
style.bash.7=$(colour.operator)
# Identifiers (functions, etc.)
style.bash.8=$(colour.identifier)
# Scalars: $var
style.bash.9=$(colour.keyword2),$(colour.background)
# Parameter expansion: ${var}
style.bash.10=$(colour.comment.doc),$(colour.accent.back)
# Back Ticks
style.bash.11=$(colour.comment.doc),$(colour.accent.back)
# Here-doc (delimiter)
style.bash.12=$(colour.comment.doc),$(colour.accent.back)
# Here-doc (single quoted, q)
style.bash.13=$(colour.comment.doc),$(colour.accent.back),eolfilled,notbold
# Braces are only matched in operator style
braces.bash.style=7

command.go.$(file.patterns.bash)=bash $(FileNameExt)



# Define SciTE settings for PowerShell files

file.patterns.powershell=*.ps1;*.psm1
*source.patterns.powershell=$(file.patterns.powershell);

filter.powershell=PowerShell (ps1)|$(file.patterns.powershell)|
*filter.powershell=$(filter.powershell)

lexer.$(file.patterns.powershell)=powershell
*language.powershell=PowerShell|ps1||

word.characters.$(file.patterns.powershell)=$(chars.alpha)$(chars.numeric)_-$

# Keywords
keywords.$(file.patterns.powershell)=\
begin break catch continue data do dynamicparam else elseif end exit filter \
finally for foreach from function if in local param private process return \
switch throw trap try until where while

# Cmdlets
keywords2.$(file.patterns.powershell)=\
add-computer add-content add-history add-member add-pssnapin add-type \
checkpoint-computer clear-content clear-eventlog clear-history clear-item \
clear-itemproperty clear-variable compare-object complete-transaction \
connect-wsman convert-path convertfrom-csv convertfrom-securestring \
convertfrom-stringdata convertto-csv convertto-html convertto-securestring \
convertto-xml copy-item copy-itemproperty debug-process disable-computerrestore \
disable-psbreakpoint disable-pssessionconfiguration disable-wsmancredssp \
disconnect-wsman enable-computerrestore enable-psbreakpoint enable-psremoting \
enable-pssessionconfiguration enable-wsmancredssp enter-pssession exit-pssession \
export-alias export-clixml export-console export-counter export-csv \
export-formatdata export-modulemember export-pssession foreach-object \
format-custom format-list format-table format-wide get-acl get-alias \
get-authenticodesignature get-childitem get-command get-computerrestorepoint \
get-content get-counter get-credential get-culture get-date get-event \
get-eventlog get-eventsubscriber get-executionpolicy get-formatdata get-help \
get-history get-host get-hotfix get-item get-itemproperty get-job get-location \
get-member get-module get-psbreakpoint get-pscallstack get-psdrive \
get-psprovider get-pssession get-pssessionconfiguration get-pssnapin \
get-pfxcertificate get-process get-random get-service get-tracesource \
get-transaction get-uiculture get-unique get-variable get-wsmancredssp \
get-wsmaninstance get-winevent get-wmiobject group-object import-alias \
import-clixml import-counter import-csv import-localizeddata import-module \
import-pssession invoke-command invoke-expression invoke-history invoke-item \
invoke-wsmanaction invoke-wmimethod join-path limit-eventlog measure-command \
measure-object move-item move-itemproperty new-alias new-event new-eventlog \
new-item new-itemproperty new-module new-modulemanifest new-object new-psdrive \
new-pssession new-pssessionoption new-service new-timespan new-variable \
new-wsmaninstance new-wsmansessionoption new-webserviceproxy out-default \
out-file out-gridview out-host out-null out-printer out-string pop-location \
push-location read-host receive-job register-engineevent register-objectevent \
register-pssessionconfiguration register-wmievent remove-computer remove-event \
remove-eventlog remove-item remove-itemproperty remove-job remove-module \
remove-psbreakpoint remove-psdrive remove-pssession remove-pssnapin \
remove-variable remove-wsmaninstance remove-wmiobject rename-item \
rename-itemproperty reset-computermachinepassword resolve-path restart-computer \
restart-service restore-computer resume-service select-object select-string \
select-xml send-mailmessage set-acl set-alias set-authenticodesignature \
set-content set-date set-executionpolicy set-item set-itemproperty set-location \
set-psbreakpoint set-psdebug set-pssessionconfiguration set-service \
set-strictmode set-tracesource set-variable set-wsmaninstance \
set-wsmanquickconfig set-wmiinstance show-eventlog sort-object split-path \
start-job start-process start-service start-sleep start-transaction \
start-transcript stop-computer stop-job stop-process stop-service \
stop-transcript suspend-service tee-object test-computersecurechannel \
test-connection test-modulemanifest test-path test-wsman trace-command \
undo-transaction unregister-event unregister-pssessionconfiguration \
update-formatdata update-list update-typedata use-transaction wait-event \
wait-job wait-process where-object write-debug write-error write-eventlog \
write-host write-output write-progress write-verbose write-warning

# Aliases
keywords3.$(file.patterns.powershell)=\
ac asnp cat cd chdir clc clear clhy cli clp cls clv compare copy cp cpi cpp cvpa \
dbp del diff dir ebp echo epal epcsv epsn erase etsn exsn fc fl foreach ft fw \
gal gbp gc gci gcm gcs gdr ghy gi gjb gl gm gmo gp gps group gsn gsnp gsv gu gv \
gwmi h history icm iex ihy ii ipal ipcsv ipmo ipsn ise iwmi kill lp ls man md \
measure mi mount move mp mv nal ndr ni nmo nsn nv ogv oh popd ps pushd pwd r rbp \
rcjb rd rdr ren ri rjb rm rmdir rmo rni rnp rp rsn rsnp rv rvpa rwmi sajb sal \
saps sasv sbp sc select set si sl sleep sort sp spjb spps spsv start sv swmi tee \
type where wjb write

# Functions
keywords4.$(file.patterns.powershell)=\
clear-host disable-psremoting enable-psremoting get-verb help importsystemmodules \
mkdir more prompt psedit tabexpansion

# User-defined keywords
#keywords5.$(file.patterns.powershell)=

# Comments
comment.block.powershell=#~
comment.block.at.line.start.powershell=1

# PowerShell Styles
# Default
style.powershell.0=$(colour.identifier)
# Comment
style.powershell.1=$(colour.comment.line)
# String
style.powershell.2=$(colour.string),$(colour.background)
# Character
style.powershell.3=$(colour.char),$(colour.background)
# Number
style.powershell.4=$(colour.number)
# Variable
style.powershell.5=$(colour.number)
# Operator
style.powershell.6=$(colour.operator),$(colour.background)
# Identifier
style.powershell.7=$(style.powershell.0),$(colour.background)
# Keyword
style.powershell.8=$(colour.keyword2),$(colour.background)
# Cmdlet
style.powershell.9=$(colour.keyword2),$(colour.background)
# Alias
style.powershell.10=$(colour.keyword4)
# Function
style.powershell.11=$(colour.globalclass)
# User-defined keyword
style.powershell.12=$(colour.keyword4)
# Comment (multi-line)
style.powershell.13=$(colour.comment.box),$(colour.background)
# Here-string
style.powershell.14=fore:#8A7460,$(colour.background),eolfilled
# Here-string single quote
style.powershell.15=fore:#8A7460,$(colour.accent.back),eolfilled,notbold
# Comment keyword
style.powershell.16=$(colour.doccommenttripledash)

command.go.*.ps1=PowerShell.exe -NoLogo -ExecutionPolicy UnRestricted -File "$(FilePath)"
command.go.subsystem.*.ps1=0


#####--- Batch keywords ---#######

# List from http://www.easydos.com/dosindex.html
# I limit here the commands to those built in command.com, ie. I don't list external Dos commands
# if [no] (test) (command) -- test is EXIST (filename) | (string1)==(string2) | ERRORLEVEL (number)
# for %%(variable) IN (set) DO (command) -- variable is [a-zA-Z] -- eg for %%X in (*.txt) do type %%X
keywordclass.batchFlow=  break call cd chdir date time md mkdir cls for if echo echo. move copy rd ren rename rmdir del dir erase ftype set exit ver type title setlocal shift endlocal pause pushd popd defined delims exist errorlevel else in do NUL AUX CON PRN not goto eol equ neq geq gtr leq lss neq skip tokens usebakq verify delims @ on off

# External Keywords 
# XP: https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb490890(v=technet.10)
# WinServer/Win10: https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/windows-commands
keywordclass.batchCmd=arp assoc at atmadm attrib batchfiles bootcfg cacls change chcp chkdsk chkntfs cipher cmd cmstp \
color comp compact convert copy cprofile cscript date defrag del dir diskcomp diskcopy diskpart doskey driverquery \
eventcreate eventquery eventtriggers evntcmd exit expand fc find findstr finger flattemp for format \
fsutil ftp ftype getmac gpresult gpupdate graftabl help helpctr hostname ipconfig ipseccmd ipxroute irftp label \
lodctr logman lpq lpr macfile mmc mode more mountvol move msiexec msinfo32 nbtstat net netsh netstat nslookup ntbackup \
ntcmdprompt ntsd openfiles pagefileconfig path pathping pbadmin pentnt perfmon ping print prncnfg prndrvr \
prnjobs prnmngr prnport prnqctl prompt query rasdial rcp recover redirectionoperators reg regsvr32 relog \
replace resetsession rexec route rsh rsm runas sc schtasks secedit shift shutdown sort start subst \
systeminfo sfc taskkill tasklist tcmsetup telnet tftp time title tracerpt tracert tree type typeperf unlodctr \
vol vssadmin w32tm winnt32 wmic xcopy  \
append auditpol autochk autoconv autofmtbcdboot bcdedit bdehdcfg bitsadminbootcfg breakcacls certreq certutil chglogon chgport \
chgusr choice clip cmdkey cscriptdate dcgpofix dfsrmig diantz diskperf diskraid diskshadow dispdiag dnscmd driverqueryecho edit \
extract fondue forfiles freedisk fveupdategetmac gettype gpfixup icacls inuse irftpjetpack klist ksetup ktmutil ktpass logoff makecab \
manage-bde mapadmin mklink mount mqbkup mqsvc mqtgsvc msdt msg mstsc netcfg netprint nfsadmin nfsshare nfsstat nlbmgr \
nsysocmgr ntfrsutl pnpunattend pnputil powershell powershell_ise pubprn pushprinterconnections qappsrv qprocess quser qwinsta \
rdpsign regini rem repair-bde risetup robocopy route_ws2008 rpcinfo rpcping rundll32 rwinsta scwcmd serverceipoptin servermanagercmd \
serverweroptin setx shadow showmount sxstrace takeown tapicfg timeout tlntadmn tpmvscmgr tscon tsdiscon tsecimp tskill tsprof tzutil \
unlodctrver verifier vssadmin- waitfor wbadmin wdsutil wecutil wevtutil where whoami winnt winpop winrs wlbs wscript 

# Predefined Env. Source: windows10 1803
keywordclass.batchEnv=allusersprofile appdata clientname cmdcmdline cmdextversion commonprogramfiles commonprogramfiles(x86) \
commonprogramw6432 computername comspec errorlevel homedrive homepath localappdata logonserver number_of_processors \
os path pathext processor_architecture processor_identifier processor_level processor_revision programdata \
programfiles programfiles(x86) programw6432 prompt psmodulepath public sessionname systemdrive systemroot \
temp tmp userdnsdomain userdomain userdomain_roamingprofile username userprofile windir

keywords.$(file.patterns.batch)=$(keywordclass.batchFlow) $(keywordclass.batchEnv) $(keywordclass.batchCmd)

#define the activation of the ProperCase function using batch.api.  0=no change, 1=Propercase functions and keywords
proper.case=0

# ---- Batch calltip and autocomplete Settings,
# ---- Caution: Whitespace allergic api property.

api.$(file.patterns.batch)=$(SciteUserHome)/user/languages/system/batch_win10.api;$(SciteUserHome)/user/languages/system/batch_nt.api

calltip.batch.word.characters=$(chars.alpha)$(chars.numeric)%
calltip.batch.ignorecase=1
calltip.batch.parameters.start= |
calltip.batch.parameters.separators= |
calltip.batch.end.definition=;
autocomplete.batch.ignorecase=1
autocomplete.batch.start.characters=$(chars.alpha)$(chars.numeric)%
word.characters.$(file.patterns.batch)=$(chars.alpha)$(chars.numeric)%

# ---- Batch default Styles
# Params /xyz
style.batch.0=$(colour.default32)
# Comment (rem or ::)
style.batch.1=$(colour.comment.line)
# Keywords
style.batch.2=$(colour.extcmd),$(colour.background)
# Label (line beginning with ':')
style.batch.3=$(colour.signal),$(colour.accent.back),eolfilled
# Hide command character ('@')
style.batch.4=$(colour.signal),$(colour.accent.back),eolfilled
# External commands SCE_BAT_COMMAND
style.batch.5=$(colour.keyword2)
# Variable: %%x (x is almost whatever, except space and %), %n (n in [0-9]), %EnvironmentVar%
style.batch.6=$(colour.identifier)
# Operator: * ? < > |
style.batch.7=$(colour.operator),$(colour.background)

comment.block.batch=::
comment.box.start.batch=:: *****************************************************
comment.box.middle.batch=:: **
comment.box.end.batch=:: *****************************************************
comment.stream.start.batch=::
comment.stream.end.batch=

