UIObject:GetObjectType() Description: Get the type of this object Description: New in 1.10 
UIObject:IsObjectType("type") Description: Determine if this object is of the specified type, or a subclass of that type Description: New in 1.10.
Font:CopyFontObject(otherFont) Description: Set this Font's attributes to be a copy of the otherFont font object's. 
Font:GetAlpha() Description: Return this font's alpha setting. 
Font:GetFont() Description: Return the font file, height, and flags for this Font. 
Font:GetFontObject() Description: Return the 'parent' Font object, or nil if none. 
Font:GetJustifyH() Description: Return Font's horizontal justification. 
Font:GetJustifyV() Description: Return Font's vertical justification. 
Font:GetName() Description: Return the name of the Font object. 
Font:GetShadowColor() Description: Returns the color of this Font's shadow (r,g,b,a). 
Font:GetShadowOffset() Description: Returns the Font's shadow offset (x,y). 
Font:GetSpacing() Description: Returns the Font's spacing(). 
Font:GetTextColor() Description: Returns the Font's color (r,g,b,a) 
Font:SetAlpha(alpha) Description: Set the Font's alpha value. 
Font:SetFont("path",height[,"flags"]) Description: Sets the font to use, returns 1 if the path was valid, nil otherwise (no change occurs). 
Font:SetFontObject(fontObject) Description: Sets the 'parent' Font object. 
Font:SetJustifyH("justifyH") Description: Sets horizontal justification ("LEFT","RIGHT", or "CENTER") 
Font:SetJustifyV("justifyV") Description: Sets vertical justification ("TOP","BOTTOM", or "MIDDLE") 
Font:SetShadowColor(r,g,b,a) Description: Sets the shadow color. 
Font:SetShadowOffset(x,y) Description: Sets the shadow offset. 
Font:SetSpacing(spacing) Description: Sets the font spacing. 
Font:SetTextColor(r,g,b,a) Description: Sets the font's color.
LayoutFrame:ClearAllPoints() Description: Clear all attachment points for this object. 
LayoutFrame:GetAlpha() Description: Get the alpha level of this frame Description: Moved in 1.10. 
LayoutFrame:GetBottom() Description: Get the y location of the bottom edge of this frame Description: Moved in 1.10. 
LayoutFrame:GetCenter() Description: Get the coordinates of the center of this frame Description: Moved in 1.10. 
LayoutFrame:GetHeight() Description: Get the height of this object. 
LayoutFrame:GetLeft() Description: Get the x location of the left edge of this frame Description: Moved in 1.10. 
LayoutFrame:GetName() Description: Get the name of this object. 
LayoutFrame:GetNumPoints() Description: Get the number of anchor points for this frame Description: New in 1.10. 
LayoutFrame:GetParent() Description: Get the parent of this frame (The object, not just the name) Description: Moved in 1.10. 
LayoutFrame:GetPoint(point) Description: Get details for an anchor points for this frame (point,relativeTo,relativePoint,xofs,yofs) Description: New in 1.10. 
LayoutFrame:GetRight() Description: Get the x location of the right edge of this frame Description: Moved in 1.10. 
LayoutFrame:GetTop() Description: Get the y location of the top edge of this frame Description: Moved in 1.10. 
LayoutFrame:GetWidth() Description: Get the width of this object. 
LayoutFrame:Hide() Description: Set this object to hidden (it and all of its children will disappear). 
LayoutFrame:IsShown() Description: Determine if this object is shown (would be visible if its parent was visible). 
LayoutFrame:IsVisible() Description: Get whether the object is visible on screen (logically (IsShown() and GetParent():IsVisible())); 
LayoutFrame:SetAllPoints(frame or "frameName") Description: Set all anchors to match edges of specified frame Description: Moved in 1.10. 
LayoutFrame:SetAlpha(alpha) Description: Set the alpha level of this object (affects children also). 
LayoutFrame:SetHeight(height) Description: Set the height of the object. 
LayoutFrame:SetParent(parent or "parentName") Description: Set the parent for this frame Description: Moevd in 1.10. 
LayoutFrame:SetPoint("point","relativeFrame" or relativeObject,"relativePoint"[,xOfs,yOfs]) Description: Set an attachment point of this object Description: Updated in 1.10. 
LayoutFrame:SetWidth(width) Description: Set the width of the object. 
LayoutFrame:Show() Description: Set this object to shown (it will appear if its parent is visible).
Frame:CreateFontString(["name"[,"layer"]]) Description: Create and return a new FontString as a child of this Frame. 
Frame:CreateTexture(["name"[,"layer"]]) Description: Create and return a new Texture as a child of this Frame. 
Frame:DisableDrawLayer("layer") Description: Disable rendering of regions in the specified draw layer. 
Frame:EnableDrawLayer("layer") Description: Enable rendering of regions in the specified draw layer. 
Frame:EnableKeyboard(enableFlag) Description: Set whether this frame will get keyboard input. 
Frame:EnableMouse(enableFlag) Description: Set whether this frame will get mouse input. 
Frame:EnableMouseWheel(enableFlag) Description: Set whether this frame will get mouse wheel events. 
Frame:GetChildren() Description: Get the children of this frame. 
Frame:GetEffectiveScale() Description: Get the scale factor of this object relative to the root window. 
Frame:GetFrameLevel() Description: Get the level of this frame. 
Frame:GetFrameStrata() Description: Get the strata of this frame. 
Frame:GetFrameType() Description: Get the type of this frame. 
Frame:GetID() Description: Get the ID of this frame. 
Frame:GetNumChildren() Description: Get the number of children this frame has. 
Frame:GetNumRegions() Description: Return the number of Regions that are children of this frame. 
Frame:GetRegions() Description: Return the regions of the frame (multiple return values). 
Frame:GetScale() Description: Get the scale factor of this object relative to its parent. 
Frame:GetScript("handler") Description: Get the function for one of this frame's handlers. 
Frame:HasScript("handler") Description: Return true if the frame can be given a handler of the specified type (NOT whether it actually HAS one, use GetScript for that) Description: Since 1.8. 
Frame:IsFrameType("type") Description: Determine if this frame is of the specified type, or a subclass of that type. 
Frame:IsMovable() Description: Determine if the frame can be moved. 
Frame:IsResizable() Description: Determine if the frame can be resized. 
Frame:IsToplevel() Description: Determine if the frame is Toplevel. 
Frame:IsUserPlaced() Description: Determine if this frame has been relocated by the user. 
Frame:Lower() Description: Lower this frame behind other frames. 
Frame:Raise() Description: Raise this frame above other frames. 
Frame:RegisterEvent("event") Description: Indicate that this frame should be notified when event occurs. 
Frame:RegisterForDrag("buttonType"[,"buttonType"...]) Description: Inidicate that this frame should be notified of drag events for the specified buttons. 
Frame:SetBackdrop([backdropTable]) Description: Set the backdrop of the frame according to the specification provided. 
Frame:SetBackdropBorderColor(r,g,b[,a]) Description: Set the frame's backdrop's border's color. 
Frame:SetBackdropColor(r,g,b[,a]) Description: Set the frame's backdrop color. 
Frame:SetFrameLevel(level) Description: Set the level of this frame (determines which of overlapping frames shows on top). 
Frame:SetFrameStrata("strata") Description: Set the strata of this frame. 
Frame:SetID(id) Description: Set the ID of this frame. 
Frame:SetMaxResize(maxWidth,maxHeight) Description: Set the maximum dimensions this frame can be resized to. 
Frame:SetMinResize(minWidth,minHeight) Description: Set the minimum dimensions this frame can be resized to. 
Frame:SetMovable(isMovable) Description: Set whether the frame can be moved. 
Frame:SetResizable(isResizable) Description: Set whether the frame can be resized. 
Frame:SetScale(scale) Description: Set the scale factor of this frame relative to its parent. 
Frame:SetScript("handler",function) Description: Set the function to use for a handler on this frame. 
Frame:SetToplevel(isToplevel) Description: Set whether the frame is Toplevel. 
Frame:SetUserPlaced(isUserPlaced) Description: Set whether the frame has been relocated by the user (and will thus be saved in the layout cache). 
Frame:StartMoving() Description: Start moving this frame. 
Frame:StartSizing("point") Description: Start sizing this frame using the specified anchor point. 
Frame:StopMovingOrSizing() Description: Stop moving and/or sizing this frame. 
Frame:UnregisterAllEvents() Description: Indicate that this frame should no longer be notified when any events occur. 
Frame:UnregisterEvent("event") Description: Indicate that this frame should no longer be notified when event occurs.
Region:GetDrawLayer() Description: Returns the draw layer for the Region Description: New in 1.10. 
Region:SetDrawLayer("layer") Description: Sets the draw layer for the Region Description: New in 1.10.
Button:Click() Description: Execute the click action of the button. 
Button:Disable() Description: Disable the Button so that it cannot be clicked. 
Button:Enable() Description: Enable to the Button so that it may be clicked. 
Button:GetButtonState() Description: Return the current state ("PUSHED","NORMAL") of the Button. 
Button:GetDisabledFontObject() Description: Return the font object for the Button when disabled Description: New in 1.10. 
Button:GetFont() Description: Returns the font, size, and flags currently used for display on the Button. 
Button:GetHighlightFontObject() Description: Return the font object for the Button when highlighted Description: New in 1.10. 
Button:GetText() Description: Get the text label for the Button. 
Button:GetTextFontObject() Description: Return the font object for the Button's normal text Description: New in 1.10. 
Button:GetTextHeight() Description: Get the height of the Button's text. 
Button:GetTextWidth() Description: Get the width of the Button's text. 
Button:IsEnabled() Description: Determine whether the Button is enabled. 
Button:LockHighlight() Description: Set the Button to always be drawn highlighted. 
Button:RegisterForClicks("clickType"[,"clickType"...]) Description: Control which mouse button up/down events get passed to the <OnClick> event handler. 
Button:SetButtonState("state"[,lock]) Description: Set the state of the Button ("PUSHED", "NORMAL") and whether it is locked. 
Button:SetDisabledFontObject([font]) Description: Set the font object for settings when disabled Description: New in 1.10. 
Button:SetDisabledTextColor(r,g,b[,a]) Description: Set the disabled text color for the Button. 
Button:SetDisabledTexture(texture or "texturePath") Description: Set the disabled texture for the Button Description: Updated in 1.10. 
Button:SetFont("font",size[,"flags"]) Description: Set the font to use for display. 
Button:SetHighlightFontObject([font]) Description: Set the font object for settings when highlighted Description: New in 1.10. 
Button:SetHighlightTextColor(r,g,b[,a]) Description: Set the highlight text color for the Button. 
Button:SetHighlightTexture(texture or "texturePath") Description: Set the highlight texture for the Button Description: Updated in 1.10. 
Button:SetNormalTexture(texture or "texturePath") Description: Set the normal texture for the Button Description: Updated in 1.10. 
Button:SetPushedTexture(texture or "texturePath") Description: Set the pushed texture for the Button Description: Updated in 1.10. 
Button:SetText("text") Description: Set the text label for the Button. 
Button:SetTextColor(r,g,b) Description: Set the text color for the Button. 
Button:SetTextFontObject([font]) Description: Set the font object from which to get settings for this Button's normal state Description: New in 1.10. 
Button:UnlockHighlight() Description: Set the Button to not always be drawn highlighted.
ColorSelect:GetColorHSV() Description: Get the HSV values of the selected color. 
ColorSelect:GetColorRGB() Description: Get the RGB values of the selected color. 
ColorSelect:SetColorHSV(h,s,v) Description: Set to a specific HSV color. 
ColorSelect:SetColorRGB(r,g,b) Description: Set to a specific RGB color.
EditBox:AddHistoryLine("text") Description: Add text to the edit history. 
EditBox:ClearFocus() 
EditBox:GetAltArrowKeyMode 
EditBox:GetFont() Description: Returns the font, size, and flags currently used for display. 
EditBox:GetFontObject 
EditBox:GetHistoryLines() Description: Get the number of history lines for this edit box 
EditBox:GetInputLanguage() Description: Get the input language (locale based not in-game) 
EditBox:GetJustifyH 
EditBox:GetJustifyV 
EditBox:GetNumLetters() Description: Gets the number of letters in the box. 
EditBox:GetNumber() 
EditBox:GetShadowColor 
EditBox:GetShadowOffset 
EditBox:GetSpacing 
EditBox:GetText() Description: Get the current text contained in the edit box. 
EditBox:GetTextColor 
EditBox:HighlightText([startPos,endPos]) Description: Set the highlight to all or some of the edit box text. 
EditBox:Insert("text") Description: Insert text into the edit box. 
EditBox:SetAltArrowKeyMode 
EditBox:SetFocus() 
EditBox:SetFont("font",size[,"flags"]) Description: Set the font to use for display. 
EditBox:SetFontObject 
EditBox:SetHistoryLines() Description: Set the number of history lines to remember. 
EditBox:SetJustifyH 
EditBox:SetJustifyV 
EditBox:SetMaxBytes(maxBytes) Description: Set the maximum byte size for entered text. 
EditBox:SetMaxLetters(maxLetters) Description: Set the maximum number of letters for entered text. 
EditBox:SetNumber(number) 
EditBox:SetShadowColor 
EditBox:SetShadowOffset 
EditBox:SetSpacing 
EditBox:SetText("text") Description: Set the text contained in the edit box. 
EditBox:SetTextColor(r,g,b) Description: Set the color of the text in the edit box. 
EditBox:SetTextInsets(l,r,t,b) 
EditBox:ToggleInputLanguage() 
GameTooltip:AddDoubleLine(textL,textR,rL,gL,bL,rR,gR,bR) 
GameTooltip:AddLine 
GameTooltip:AppendText("text") Description: Append text to the end of the first line of the tooltip. 
GameTooltip:ClearLines 
GameTooltip:FadeOut 
GameTooltip:GetAnchorType() Description: Returns the current anchoring type. 
GameTooltip:IsOwned(frame) Description: Returns true if the tooltip is currently owned by the specified frame Description: Since 1.8. 
GameTooltip:NumLines() Description: Get the number of lines in the tooltip. 
GameTooltip:SetAction(slot) Description: Shows the tooltip for the specified action button. 
GameTooltip:SetAuctionCompareItem("type",index[,offset]) 
GameTooltip:SetAuctionItem("type",index) Description: Shows the tooltip for the specified auction item. 
GameTooltip:SetAuctionSellItem 
GameTooltip:SetBagItem 
GameTooltip:SetBuybackItem 
GameTooltip:SetCraftItem 
GameTooltip:SetCraftSpell 
GameTooltip:SetHyperlink(link) Description: Shows the tooltip for the specified hyperlink (usually item link). 
GameTooltip:SetInboxItem(index) Description: Shows the tooltip for the specified mail inbox item. 
GameTooltip:SetInventoryItem(unit,slot[,nameOnly]) 
GameTooltip:SetLootItem 
GameTooltip:SetLootRollItem(id) Description: Shows the tooltip for the specified loot roll item. 
GameTooltip:SetMerchantCompareItem("slot"[,offset]) 
GameTooltip:SetMerchantItem 
GameTooltip:SetMinimumWidth(width) Description: (Formerly SetMoneyWidth) 
GameTooltip:SetOwner 
GameTooltip:SetPadding 
GameTooltip:SetPetAction(slot) Description: Shows the tooltip for the specified pet action. 
GameTooltip:SetPlayerBuff(buffIndex) Description: Direct the tooltip to show information about a player's buff. 
GameTooltip:SetQuestItem 
GameTooltip:SetQuestLogItem 
GameTooltip:SetQuestLogRewardSpell 
GameTooltip:SetQuestRewardSpell 
GameTooltip:SetSendMailItem 
GameTooltip:SetShapeshift(slot) Description: Shows the tooltip for the specified shapeshift form. 
GameTooltip:SetSpell(spellId,spellbookTabNum) Description: Shows the tooltip for the specified spell. 
GameTooltip:SetTalent(tabIndex,talentIndex) Description: Shows the tooltip for the specified talent. 
GameTooltip:SetText("text",r,g,b[,alphaValue[,textWrap]]) Description: Set the text of the tooltip. 
GameTooltip:SetTrackingSpell 
GameTooltip:SetTradePlayerItem 
GameTooltip:SetTradeSkillItem 
GameTooltip:SetTradeTargetItem 
GameTooltip:SetTrainerService 
GameTooltip:SetUnit 
GameTooltip:SetUnitBuff("unit",buffIndex[,raidFilter]) Description: Shows the tooltip for a unit's buff. 
GameTooltip:SetUnitDebuff("unit"buffIndex[,raidFilter]) Description: Shows the tooltip for a unit's debuff.
MessageFrame:AddMessage("text",r,g,b,a,holdTime) Description: Add a message to the frame which will fade eventually. 
MessageFrame:GetFont 
MessageFrame:GetFontObject 
MessageFrame:GetJustifyH 
MessageFrame:GetJustifyV 
MessageFrame:GetShadowColor 
MessageFrame:GetShadowOffset 
MessageFrame:GetSpacing 
MessageFrame:GetTextColor 
MessageFrame:SetFont 
MessageFrame:SetFontObject 
MessageFrame:SetJustifyH 
MessageFrame:SetJustifyV 
MessageFrame:SetShadowColor 
MessageFrame:SetShadowOffset 
MessageFrame:SetSpacing 
MessageFrame:SetTextColor 
Minimap:GetPingPosition() Description: Get the last ping location. 
Minimap:GetZoom() Description: Get the current zoom level. 
Minimap:GetZoomLevels() Description: Get the maximum zoom level. 
Minimap:PingLocation(x,y) Description: Perform a ping at the specified location. 
Minimap:SetBlipTexture 
Minimap:SetIconTexture 
Minimap:SetMaskTexture 
Minimap:SetZoom(level) Description: Set the current zoom level.
Model:AdvanceTime() 
Model:ClearFog() Description: Removes all fogging effects currently active in rendering. 
Model:ClearModel() Description: Removes all geometry from the Model (i.e. makes it empty) 
Model:GetFacing() Description: Returns the direction the model is facing. 
Model:GetModelScale() Description: Returns the current mesh scaling factor. 
Model:GetPosition() Description: Returns the current position of the mesh as x,y,z 
Model:ReplaceIconTexture("texture") 
Model:SetCamera(index) Description: Select a predefined camera. 
Model:SetFacing(facing) Description: Set the direction that the model is facing. 
Model:SetFogColor(r,g,b[,a]) Description: Set the fog color and enable fogging. 
Model:SetFogFar(value) Description: Set the far-clipping plane distance for fogging. 
Model:SetFogNear(value) Description: Set the near-clipping plane distance for fogging. 
Model:SetLight(enabled[,omni,dirX,dirY,dirZ,ambIntensity[,ambR,ambG,ambB[,dirIntensity[,dirR,dirG,dirB]]]]) Description: Place the light source used for rendering 
Model:SetModel("file") Description: Set the mesh that is displayed in the frame. 
Model:SetModelScale(scale) Description: Sets the scale factor for the mesh before rendering. 
Model:SetPosition(x,y,z) Description: Set the position of the mesh inside the frame's coordinate system. 
Model:SetSequence(sequence) Description: Set the animation to be played. 
Model:SetSequenceTime(sequence,time) 
MovieFrame:EnableSubtitles 
MovieFrame:StartMovie("filename") 
MovieFrame:StopMovie 
ScrollFrame:GetHorizontalScroll() 
ScrollFrame:GetHorizontalScrollRange() 
ScrollFrame:GetScrollChild 
ScrollFrame:GetVerticalScroll() 
ScrollFrame:GetVerticalScrollRange() 
ScrollFrame:SetHorizontalScroll(offset) 
ScrollFrame:SetScrollChild 
ScrollFrame:SetVerticalScroll(offset) 
ScrollFrame:UpdateScrollChildRect() 
ScrollingMessageFrame:AddMessage("text"[,r,g,b[,id]]) Description: Add a message to the frame, with an optional color ID. 
ScrollingMessageFrame:AtBottom() Description: Return true if frame is at the bottom. 
ScrollingMessageFrame:Clear() Description: Clear all lines from the frame. 
ScrollingMessageFrame:GetCurrentLine() 
ScrollingMessageFrame:GetCurrentScroll() 
ScrollingMessageFrame:GetFadeDuration 
ScrollingMessageFrame:GetFading 
ScrollingMessageFrame:GetFont() Description: Returns the font, size, and flags currently used for display. Description: New in 1.9. 
ScrollingMessageFrame:GetFontObject 
ScrollingMessageFrame:GetJustifyH 
ScrollingMessageFrame:GetJustifyV 
ScrollingMessageFrame:GetMaxLines() Description: Get the maximum number of lines the frame can display. 
ScrollingMessageFrame:GetNumLinesDisplayed() 
ScrollingMessageFrame:GetNumMessages() 
ScrollingMessageFrame:GetShadowColor 
ScrollingMessageFrame:GetShadowOffset 
ScrollingMessageFrame:GetSpacing 
ScrollingMessageFrame:GetTextColor 
ScrollingMessageFrame:GetTimeVisible 
ScrollingMessageFrame:PageDown() 
ScrollingMessageFrame:PageUp() 
ScrollingMessageFrame:ScrollDown() 
ScrollingMessageFrame:ScrollToBottom() 
ScrollingMessageFrame:ScrollToTop() 
ScrollingMessageFrame:ScrollUp() 
ScrollingMessageFrame:SetFadeDuration(seconds) Description: Set the fade duration. 
ScrollingMessageFrame:SetFading 
ScrollingMessageFrame:SetFont("font",size[,"flags"]) Description: Set the font to use for display Description: New in 1.9. 
ScrollingMessageFrame:SetFontObject 
ScrollingMessageFrame:SetJustifyH 
ScrollingMessageFrame:SetJustifyV 
ScrollingMessageFrame:SetMaxLines(lines) Description: Set the maximum number of displayed lines. 
ScrollingMessageFrame:SetScrollFromBottom 
ScrollingMessageFrame:SetShadowColor 
ScrollingMessageFrame:SetShadowOffset 
ScrollingMessageFrame:SetSpacing 
ScrollingMessageFrame:SetTextColor 
ScrollingMessageFrame:SetTimeVisible(seconds) Description: Sets how long lines remain visible. 
ScrollingMessageFrame:UpdateColorByID(id,r,g,b) 
SimpleHTML:GetFont 
SimpleHTML:GetFontObject 
SimpleHTML:GetJustifyH 
SimpleHTML:GetJustifyV 
SimpleHTML:GetShadowColor 
SimpleHTML:GetShadowOffset 
SimpleHTML:GetSpacing 
SimpleHTML:GetTextColor 
SimpleHTML:SetFont 
SimpleHTML:SetFontObject 
SimpleHTML:SetHyperlinkFormat("format") Description: Set the string.format format to use to display hyperlinks. 
SimpleHTML:SetJustifyH 
SimpleHTML:SetJustifyV 
SimpleHTML:SetShadowColor 
SimpleHTML:SetShadowOffset 
SimpleHTML:SetSpacing 
SimpleHTML:SetText("text") Description: Set the text to be displayed. 
SimpleHTML:SetTextColor(r,g,b) Description: Set the color of displayed text.
Slider:GetMinMaxValues() Description: Get the current bounds of the slider. 
Slider:GetOrientation 
Slider:GetValue() Description: Get the current value of the slider. 
Slider:GetValueStep() Description: Get the current step size of the slider. 
Slider:SetMinMaxValues(min,max) Description: Set the bounds of the slider. 
Slider:SetOrientation 
Slider:SetValue(value) Description: Set the value of the slider. 
Slider:SetValueStep(value) Description: Set the step size of the slider.
StatusBar:GetMinMaxValues() Description: Get the current bounds of the bar. 
StatusBar:GetOrientation 
StatusBar:GetStatusBarColor 
StatusBar:GetStatusBarTexture 
StatusBar:GetValue() Description: Get the current value of the bar. 
StatusBar:SetMinMaxValues(min,max) Description: Set the bounds of the bar. 
StatusBar:SetOrientation 
StatusBar:SetStatusBarColor(r,g,b[,alpha]) Description: Set the color of the bar. 
StatusBar:SetStatusBarTexture("file"[,"layer"]) Description: Sets the texture of the bar. 
StatusBar:SetValue(value) Description: Set the value of the bar.
CheckButton:GetChecked() Description: Get the status of the checkbox. 
CheckButton:SetChecked([state]) Description: Set the status of the checkbox. 
CheckButton:SetCheckedTexture("texture") Description: Set the texture to use for a checked box. 
CheckButton:SetDisabledCheckedTexture("texture") Description: Set the texture to use for an unchecked box.
LootButton:SetSlot(index) Description: Set which the item to loot if the button is clicked.
PlayerModel:RefreshUnit() 
PlayerModel:SetRotation(rotationRadians) 
PlayerModel:SetUnit("unit") 
DressUpModel:Dress() Description: Set the model to reflect the character's current inventory. 
DressUpModel:TryOn("item") Description: Add the specified item to the model. 
DressUpModel:Undress() Description: Set the model to reflect the character without inventory.
TabardModel:CanSaveTabardNow() Description: Indicate if the tabard can be saved. 
TabardModel:CycleVariation(variationIndex,delta) 
TabardModel:GetLowerBackgroundFileName 
TabardModel:GetLowerEmblemFileName 
TabardModel:GetLowerEmblemTexture("textureName") 
TabardModel:GetUpperBackgroundFileName 
TabardModel:GetUpperEmblemFileName 
TabardModel:GetUpperEmblemTexture("textureName") 
TabardModel:InitializeTabardColors() 
TabardModel:Save() Description: Save the tabard.
FontString:GetFont() Description: Returns the font, size, and flags currently used for display. 
FontString:GetFontObject 
FontString:GetJustifyH 
FontString:GetJustifyV 
FontString:GetShadowColor 
FontString:GetShadowOffset 
FontString:GetSpacing 
FontString:GetStringWidth() Description: Returns the width in pixels of the current string in the current font (without line wrapping). 
FontString:GetText() Description: Get the displayed text. 
FontString:GetTextColor() Description: Get the color of the displayed text. 
FontString:SetAlphaGradient(start,length) Description: Create or remove an alpha gradient over the text. 
FontString:SetFont("font",size[,"flags"]) Description: Set the font to use for display. 
FontString:SetFontObject 
FontString:SetJustifyH("direction") Description: Set the horizontal justification of this string. 
FontString:SetJustifyV("direction") Description: Set the vertical justification of this string. 
FontString:SetNonSpaceWrap(wrapFlag) Description: Set whether long strings without spaces are wrapped or truncated. 
FontString:SetShadowColor 
FontString:SetShadowOffset 
FontString:SetSpacing 
FontString:SetText("text") Description: Set the displayed text. 
FontString:SetTextColor(r,g,b[,alpha]) Description: Set the color of the text. 
FontString:SetTextHeight(pixelHeight) Description: Set the height of the text by scaling graphics (Note: Can distort text). 
FontString:SetVertexColor(r,g,b[,alpha]) 
Texture:GetBlendMode 
Texture:GetTexture() Description: Gets this texture's current texture path. 
Texture:GetVertexColor 
Texture:SetBlendMode 
Texture:SetDesaturated(flag) Description: Set whether this texture should be displayed with no saturation (IMPORTANT: This has a return value) 
Texture:SetGradient("orientation",minR,minG,minB,maxR,maxG,maxB) 
Texture:SetGradientAlpha("orientation",minR,minG,minB,minA,maxR,maxG,maxB,maxA) 
Texture:SetTexCoord(minX,maxX,minY,maxY or ULx,ULy,LLx,LLy,URx,URy,LRx,LRy) Description: Set the corner coordinates for texture display. 
Texture:SetTexture("texturePath" or r,g,b [,a]) Description: Sets the texture to be displayed 
Texture:SetVertexColor(r,g,b[,alpha]) 