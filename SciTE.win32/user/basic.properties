# Define SciTE settings for Basic files. (freebasic/vb/vbs/wsh)
#  Add vba Keywords - Hint - all keywords have to be lowercase
# imJuli2016- Marcedo@habmalneFrage.de

# FRM: Form, CLS: Class Module, CTL: User Control
# PAG: Property Page, DSR: Data Report, DOB: User Document
file.patterns.vb=*.vbp;*.vb;*.vba;*.frm;*.cls;*.ctl;*.pag;*.dsr;*.dob

*source.patterns.vb=$(file.patterns.vb);

# VBP: VB Project, VBG: VB Project Group (ActiveX), MAK: old (VB3) project file, VBW: VB Workspace
filter.vb=vb ( vb vba frm cls vba)|$(file.patterns.vb)

*filter.vb=$(filter.vb)|
lexer.$(file.patterns.vb)=vb
# *language.vb=&vbNet/vb6/vba|vb||

word.characters.$(file.patterns.vb)=$(chars.alpha)$(chars.numeric)-'#
autocomplete.vb.start.characters=$(chars.alpha)$(chars.numeric)$_<
autocomplete.vb.ignorecase=1
calltip.vb.end.definition=)
calltip.vb.parameters.start=(
calltip.vb.parameters.separators=,
calltip.vb.parameters.end=)
calltip.vb.ignorecase=1
#------ \t\n makes a calltip multiline
calltip.vb.use.escapes=1

#api.$(file.patterns.vb)=\
#$(SciteDefaultHome)/api/vba_07_2016.api;\
#$(SciteDefaultHome)/user/languages/vba_07_2016.api

# Keywords, operators, statements, data types and some words in .frm files
keywordclass.vb6=\
addressof alias and as attribute base begin binary boolean byref byte byval call case cdbl \
cint clng compare const csng cstr currency date decimal declare defbool defbyte defcur \
defdate defdbl defdec defint deflng defobj defsng defstr defvar dim do double each else \
elseif empty end enum eqv erase error event exit explicit false for friend function get \
global gosub goto if imp implements in input integer is len let lib like load lock long \
loop lset me mid midb mod new next not nothing null object on option optional or paramarray \
preserve print private property public raiseevent randomize redim rem resume return rset \
seek select set single static step stop string sub text then time to true type typeof \
unload until variant wend while with withevents xor

#https://msdn.microsoft.com/de-de/library/microsoft.visualbasic.constants_fields(v=vs.110).aspx
keywordclass.vbConstants= \
vbabort vbabortretryignore vbapplicationmodal vbarchive vbarray vbback vbbinarycompare vbboolean vbbyte vbcancel \
vbcr vbcritical vbcrlf vbcurrency vbdate vbdecimal vbdefaultbutton1 vbdefaultbutton2 vbdefaultbutton3 vbdirectory \
vbdouble vbempty vbexclamation vbfalse vbfirstfourdays vbfirstfullweek vbfirstjan1 vbformfeed vbfriday vbgeneraldate \
vbget vbhidden vbhide vbhiragana vbignore vbinformation vbinteger vbkatakana vblet vblf vblinguisticcasing vblong \
vblongdate vblongtime vblowercase vbmaximizedfocus vbmethod vbminimizedfocus vbminimizednofocus vbmonday vbmsgboxhelp \
vbmsgboxright vbmsgboxrtlreading vbmsgboxsetforeground vbnarrow vbnewline vbno vbnormal vbnormalfocus vbnormalnofocus \
vbnull vbnullchar vbnullstring vbobject vbobjecterror vbok vbokcancel vbokonly vbpropercase vbquestion vbreadonly vbretry \
vbretrycancel vbsaturday vbset vbshortdate vbshorttime vbsimplifiedchinese vbsingle vbstring vbsunday vbsystem vbsystemmodal \
vbtab vbtextcompare vbthursday vbtraditionalchinese vbtrue vbtuesday vbuppercase vbusedefault vbuserdefinedtype vbusesystem \
vbusesystemdayofweek vbvariant vbverticaltab vbvolume vbwednesday vbwide vbyes vbyesno vbyesnocancel

# html.properties picks up VB keywords from keywordclass.vb
keywordclass.vb=$(keywordclass.vb6) $(keywordclass.vbConstants)

# Mostly system statements (files, registry, I/O...) that
# I am not sure to include with the regular statements.
keywordclass.vbotherstatements=\
appactivate beep chdir chdrive close filecopy get input kill line unlock mkdir name \
open print put reset rmdir savepicture savesetting seek sendkeys setattr width write

# VBNet specific keywords
keywordclass.vbnet=\
addhandler andalso ansi assembly auto catch cbool cbyte cchar cdate cdec char class \
cobj continue csbyte cshort ctype cuint culng cushort custom default delegate directcast \
endif externalsource finally gettype handles imports inherits interface isfalse isnot \
istrue module mustinherit mustoverride my mybase myclass namespace narrowing notinheritable \
notoverridable of off operator orelse overloads overridable overrides partial protected \
readonly region removehandler sbyte shadows shared short strict structure synclock \
throw try trycast uinteger ulong unicode ushort using when widening writeonly

# Code Flow &  reserved Keywords using unnumbered style
keywordclass.vba=\
 binary byref byval date else empty error false for friend get input is len let lock me mid new next nothing null on option optional paramarray print private property ptrsafe public resume seek set static step string then time to true withevents

# Functions / Methods using Style 2
keywordclass.vba2=\
 binary byref byval date else empty error false for friend get input is len let lock me mid new next nothing null on  abs array asc atn callbyname choose chr command conversion cos createobject curdir cverr date dateadd datediff datepart dateserial datevalue day ddb derived dir doevents environ eof error exp fileattr filedatetime filelen filter format formatcurrency formatdatetime formatnumber formatpercent freefile fv getallsettings getattr getobject getsetting hex hour iif imestatus input inputbox instr instrrev int, ipmt irr isarray isdate isempty iserror ismissing isnull isnumeric isobject join lbound lcase left len loc lof log ltrim, macid macscript math mid minute mirr month monthname msgbox now nper npv oct partition pmt ppmt pv qbcolor rate replace rgb right rnd round second seek sgn shell sin sln space spc split sqr str strcomp strconv string strreverse switch syd tab tan time timer timeserial timevalue type typename ubound ucase val vartype weekday weekdayname year

# Objects using Style 4
keywordclass.vba4=\
collection debug dictionary drive drives err file files fileSystemObject folder folders textStream userForm

# add them below, if you need support for : $(keywordclass.vb6)  $(keywordclass.vbotherstatements)

keywords.$(file.patterns.vb)=$(keywordclass.vba4) $(keywordclass.vba2) $(keywordclass.vba)
# red - flow of control aka if else do loop ....
keywords4.$(file.patterns.vb)=
# specials (objects, Selectors)
keywords2.$(file.patterns.vb)=$(keywordclass.vbnet) $(keywordclass.vb6)  $(keywordclass.vbotherstatements)

# VB styles

# Default
style.vb.32=$(colour.default)

# White space
style.vb.0=
# Comment
style.vb.1=$(colour.comment.line),$(font.comment.line)
# Number
style.vb.2=$(colour.number)
# Keyword
style.vb.3=$(colour.keyword)
# String
style.vb.4=$(colour.string)
# Preprocessor (directives)
style.vb.5=$(colour.preproc)
# Operator
style.vb.6=$(colour.operator)
# Identifier
style.vb.7=$(colour.identifier)
# Date
style.vb.8=$(colour.number)
# End of line where string is not closed
style.vb.9=$(colour.eolstringnotclosed)
# Other keywords (bozo test colors :-)
style.vb.10=$(colour.number)
style.vb.11=$(colour.number)
style.vb.12=$(colour.number)

command.help.$(file.patterns.vb)=$(CurrentWord)!C:\Program Files\Microsoft Visual Studio\MSDN\2001OCT\1033\MSDN130.COL
command.help.subsystem.$(file.patterns.vb)=4

#
# SciTE settings for Vbs (WindowsScriptingHost) code.
##imJuli2016, Marcedo@HabmalneFrage.de;

# --- Handle .vbs (vbScript)

# VBS: VBScript, DSM: Visual[ex. Dev] Studio macro
file.patterns.winscript=*.vbs;*.dsm;*.wsf;*.wsf;*.hta;*.htc
filter.winscript=vbScript (vbs wsf)|$(file.patterns.winscript)|

# ---- * Wildcard is used to collect marked properties
# ----  used to dynamically build the Language Menu. the following ones were added to vb.properties
*filter.winscript=$(filter.winscript)
*source.patterns.winscript=$(file.patterns.winscript);

# Uncomment if you want to display vbScript in the Language menu
*language.winScript=vbScr&ipt|vbs||

lexer.$(file.patterns.winscript)=freebasic
word.chars.winscript= $(chars.alpha)$(chars.numeric)-'#
word.characters.$(file.patterns.winscript)=$(word.chars.winscript)

# --------- Syntax Highlitening
# ---- Begin wsh.keywords
# Code Flow & Methods use style2

keywordclass.wshFlow= \
private public binary const byref byval date dim end elseif exit function for each in do while wend loop else empty error false for get not and or \
input if is len let lock me mid new next nothing null on option optional redim preserve sub set step string then time to true withevents resume

keywordclass.wshMethods= \
addprinterconnection addwindowsprinterconnection appactivate close connectobject count createobject createscript createshortcut \
disconnectobject echo enumnetworkdrives enumprinterconnections exec execute exists expandenvironmentstrings \
getobject getresource item logevent mapnetworkdrive popup quit read readall readline regdelete regread regwrite \
remove removenetworkdrive removeprinterconnection run save sendkeys setdefaultprinter showusage sign signfile \
specialfolders skip skipline sleep terminate verify verifyfile write writeblanklines writeline  stderr stdin stdout \
item status line hotkey iconlocation environment windowstyle workingdirectory \
opentextfile openastextstream deletefile

keywordclass.wshFunctions= \
abs array asc atn cbool cbyte ccur cdate cdbl chr cint clng conversion cos csng cstr date dateadd \
datediff datepart dateserial datevalue day escape eval exp filter formatcurrency formatdatetime formatnumber \
formatpercent getlocale getref hex hour inputbox instr instrrev int isarray isdate isempty isnull isnumeric \
isobject join lbound lcase left len loadpicture log trim math mid minute month monthname msgbox now oct replace \
rgb right rnd round scriptengine scriptenginebuildversion scriptenginemajorversion scriptengineminorversion second \
setlocale sgn sin space split sqr strcomp string strreverse tan time timer timeserial timevalue typename ubound ucase \
unescape vartype weekday weekdayname year

keywordclass.wshproperties= \
arguments atendofline atendofstream buildversion character column computername currentdirectory description  \
error exitcode fullname interactive length line name named number path processid relativepath scriptfullname scriptname \
source sourcetext status targetpath unnamed userdomain username id helpstring type required guid progID \
hookevents version language src many width height visible

# objects / tags
keywordclass.wshRootObjects= \
<?job?> <?xml?> <description> <example> <job> <named> <object> <package> <reference> <resource> <runtime> \
<script><named> <unnamed> <usage>  scriptingsigner wscript arguments controller environment \
named network remote remoteerror scriptexec shell shortcut specialfolders unnamed urlshortcut  _end _error _start err

#https://msdn.microsoft.com/de-de/library/microsoft.visualbasic.constants_fields(v=vs.110).aspx
keywordclass.vbConstants= \
vbabort vbabortretryignore vbapplicationmodal vbarchive vbarray vbback vbbinarycompare vbboolean vbbyte vbcancel \
vbcr vbcritical vbcrlf vbcurrency vbdate vbdecimal vbdefaultbutton1 vbdefaultbutton2 vbdefaultbutton3 vbdirectory \
vbdouble vbempty vbexclamation vbfalse vbfirstfourdays vbfirstfullweek vbfirstjan1 vbformfeed vbfriday vbgeneraldate \
vbget vbhidden vbhide vbhiragana vbignore vbinformation vbinteger vbkatakana vblet vblf vblinguisticcasing vblong \
vblongdate vblongtime vblowercase vbmaximizedfocus vbmethod vbminimizedfocus vbminimizednofocus vbmonday vbmsgboxhelp \
vbmsgboxright vbmsgboxrtlreading vbmsgboxsetforeground vbnarrow vbnewline vbno vbnormal vbnormalfocus vbnormalnofocus \
vbnull vbnullchar vbnullstring vbobject vbobjecterror vbok vbokcancel vbokonly vbpropercase vbquestion vbreadonly vbretry \
vbretrycancel vbsaturday vbset vbshortdate vbshorttime vbsimplifiedchinese vbsingle vbstring vbsunday vbsystem vbsystemmodal \
vbtab vbtextcompare vbthursday vbtraditionalchinese vbtrue vbtuesday vbuppercase vbusedefault vbuserdefinedtype vbusesystem \
vbusesystemdayofweek vbvariant vbverticaltab vbvolume vbwednesday vbwide vbyes vbyesno vbyesnocancel


# ---- End wsh.keywords
# flow of control aka if else do loop ....
keywords.$(file.patterns.winscript)=$(keywordclass.wshFlow)
keywords2.$(file.patterns.winscript)=$(keywordclass.wshproperties) $(keywordclass.vbConstants)
# specials (objects, Selectors)
keywords3.$(file.patterns.winscript)=$(keywordclass.wshRootObjects) $(keywordclass.wshMethods)
keywords4.$(file.patterns.winscript)=$(keywordclass.wshFunctions)

# ------- Calltips ( api parameter)
autocomplete.freebasic.start.characters=$(chars.alpha)$(chars.numeric)$_<
autocomplete.freebasic.ignorecase=1
autocomplete.freebasic.choose.single=0
autocompleteword.freebasic.automatic=0
autocomplete.freebasic.fillups=(
autocomplete.freebasic.typesep=?

#------ \t\n makes a calltip multiline
calltip.freebasic.use.escapes=1
calltip.freebasic.word.characters=$(chars.alpha)$(chars.numeric)
calltip.freebasic.ignorecase=1
calltip.freebasic.end.definition=)
calltip.freebasic.parameters.start=@(
calltip.freebasic.parameters.separators=,
calltip.freebasic.parameters.end=@)

api.$(file.patterns.winscript)=$(SciteDefaultHome)/user/languages/system/vbs_11_2016.api

# -------- Comments
comment.block.winscript='~

# -------- Indentation
statement.indent.$(file.patterns.winscript)=3 else elseif for  if while
indent.maintain.$(file.patterns.winscript)=1
#statement.lookback.$(file.patterns.winscript)=20
#comment.block.at.line.start.winscript=1

# ---------Wsh styles are Freebasic Styles

command.help.$(file.patterns.winscript)=$(CurrentWord)!C:\Program Files\Microsoft Visual Studio\MSDN\2001OCT\1033\MSDN130.COL
command.help.subsystem.$(file.patterns.wscript)=4

# Normal go Comand. Use wScript for GUI Iteractions, or cScript for console.
command.go.$(file.patterns.winscript)=cscript.exe //Nologo  $(FilePath)
command.go.subsystem.$(file.patterns.winscript)=0

# note we have no real "build"; rather "execute and capture
# compiletime and runtime errors"
command.build.$(file.patterns.winscript)=cscript.exe //Nologo $(FilePath)
command.build.subsystem.$(file.patterns.winscript)=2

# Define SciTE settings for FreeBasic files.

file.patterns.freebasic=*.bas;*.bi
filter.freebasic=FreeBasic (bb bi)|$(file.patterns.freebasic)|
*filter.freebasic=$(filter.freebasic)
*source.patterns.freebasic=$(file.patterns.freebasic);

lexer.$(file.patterns.freebasic)=freebasic
#*language.freebasic=FreeBasic|bas||

# --- Calltips ( api parameter)
api.$(file.patterns.freebasic)=$(SciteUserHome)/user/languages/freebasic_08_2017.api;

# Finally.. Freebasic Keywords...
# from: https://www.freebasic.net/wiki/wikka.php?wakka=CatPgFunctIndex
# keywords must be all lowercase

arrays=erase lbound redim preserve ubound
bits=bit bitreset bitset hibyte hiword lobyte loword
compiler_flags=defbyte defdbl defint deflng deflongint defshort defsng defstr defubyte defuint defulongint defushort option base option byval option dynamic option escape option explicit option gosub option nogosub option nokeyword option private option static
console=beep cls color csrlin locate open cons open err open pipe open scrn pos print print using using screen spc tab view width write
data=as boolean byref byte const dim double enum extends integer long longint object scope shared short single static string type ubyte uinteger ulong ulongint union unsigned ushort var with wstring zstring
datetime=date dateadd datediff datepart dateserial datevalue day hour isdate minute month monthname now second setdate settime time timeserial timevalue timer year weekday weekdayname
debug=assert assertwarn stop
err=erfn erl ermn err error local on error resume resume next
files=access append binary bload bsave close encoding eof freefile get# input# loc lock lof open output print# put# random  read write reset seek unlock write# write 
graphics=add alpha and circle cls color custom draw draw string event flip get imageconvertrow imagecreate imagedestroy imageinfo line or paint palette pcopy pmap point pointcoord preset pset pset put rgb rgba screen screencontrol screencopy screenevent screeninfo screenglproc screenlist screenlock screenptr screenres screenset screensync screenunlock trans view window xor
hardware=inp out wait open com open lpt lpos lprint
operators=mod eqv imp or xor shl shr let and or not xor andalso orelse
math=abs acos asin atan2 atn cos exp fix frac int log randomize rnd sgn sin sqr tan
memory=allocate callocate clear deallocate field fre peek poke reallocate
meta_commands=$dynamic $static $include $lang
miscellaneous=asm data is let offsetof option to read rem restore sizeof swap typeof
modularizing=common dylibfree dylibload dylibsymbol export extern import namespace private public using
multithread=condbroadcast condcreate conddestroy condsignal condwait mutexcreate mutexdestroy mutexlock mutexunlock threadcall threadcreate threaddetach threadwait
os=chain chdir command curdir dir environ exec exepath fileattr filecopy filedatetime fileexists filelen isredirected kill mkdir name rmdir run setenviron shell system windowtitle
pointers=pointer procptr ptr sadd strptr varptr
macros=__date__ __date_iso__ __fb_64bit__ __fb_argc__ __fb_argv__ __fb_arm__ __fb_bigendian__ __fb_build_date__ __fb_cygwin__ __fb_darwin__ __fb_debug__ __fb_dos__ __fb_err__ __fb_freebsd__ __fb_lang__ __fb_linux__ __fb_main__ __fb_min_version__ __fb_netbsd__ __fb_openbsd__ __fb_option_byval__ __fb_option_dynamic__ __fb_option_escape__ __fb_option_explicit__ __fb_option_gosub__ __fb_option_private__ __fb_out_dll__ __fb_out_exe__ __fb_out_lib__ __fb_out_obj__ __fb_signature__ __fb_sse__ __fb_version__ __fb_ver_major__ __fb_ver_minor__ __fb_ver_patch__ __fb_win32__ __fb_xbox__ __file__ __file_nq__ __function__ __function_nq__ __fb_mt__ __line__ __path__ __time__ false true
preprocessor=#assert #define #else #elseif #endif #endmacro #error #if #ifdef #ifndef #inclib #include #libpath #lang #line #macro #pragma #print #undef defined once 
procedures=abstract alias any base  base  byref  byref  byval call cdecl const constructor constructor destructor destructor declare function function  lib naked operator overload override pascal private  protected property public  static  sub sub stdcall this va_arg va_first va_next virtual 
flow=continue case do do loop else elseif endif end if exit gosub goto if then iif is for next loop next on gosub goto return select case sleep step then until wend while wend
strng=instr instrrev integer lcase left len lset ltrim mid right rset rtrim space string trim ucase wspace wstring
data_conversion=asc bin chr cvd cvi cvl cvlongint cvs cvshort format hex mkd mki mkl mklongint mks mkshort oct str val vallng valint valuint valulng wbin wchr whex woct wstr cast cbool cbyte cdbl cint clng clngint cptr cshort csign csng cubyte cuint culng culngint cunsg cushort
input=getjoystick getkey getmouse inkey input line input multikey setmouse stick strig winput

keywordclass.freebasic=$(arrays) $(bits) $(console) $(datetime) $(operators) $(files) $(graphics) $(hardware) $(math) $(memory) $(miscellaneous) $(os) $(strng) $(data_conversion) $(input) $(multithread)
keywordclass.preprocessor=$(compiler_flags) $(debug) $(err) $(meta_commands) $(pointers) $(preprocessor) 

keywords.$(file.patterns.freebasic)=$(keywordclass.preprocessor)
keywords2.$(file.patterns.freebasic)=$(flow) $(procedures) $(data) $(modularizing)
keywords3.$(file.patterns.freebasic)=$(keywordclass.freebasic)
keywords4.$(file.patterns.freebasic)=$(macros)

# Default
style.freebasic.32=$(colour.default)

# White space
style.freebasic.0=$(colour.userdefinedliterals),$(colour.background)
# Comment
style.freebasic.1=$(colour.comment.line)
# Number
style.freebasic.2=$(colour.number)
# Keyword
style.freebasic.3=$(colour.preproc)
# String
style.freebasic.4=$(colour.string),$(colour.background)
# Preprocessor (directives)
style.freebasic.5=$(colour.preproc)
# Operator
style.freebasic.6=$(colour.operator),$(colour.background)
# Identifier
style.freebasic.7=$(colour.identifier),$(colour.background)
# Date
style.freebasic.8=$(colour.number)
# End of line where string is not closed
style.freebasic.9=$(colour.eolstringnotclosed)
# keywords2
style.freebasic.10=$(colour.keyword),$(colour.background),notbold
#keywords3
style.freebasic.11=$(colour.globalclass),$(colour.background)
#keywords4
style.freebasic.12=$(colour.keyword4),$(colour.background)
# (Dash #)
style.freebasic.13=$(colour.globalclass),$(colour.background)
style.freebasic.14=$(colour.globalclass),$(colour.background)
#attributes : 
style.freebasic.15=$(colour.keyword),$(colour.background)

#
# SciTE settings for VNbs (WindowsScriptingHost) code.
##imJuli2016, Marcedo@HabmalneFrage.de;

# --- Handle .vbs (vbScript)

# VBS: VBScript, DSM: Visual[ex. Dev] Studio macro
file.patterns.winscript=*.vbs;*.dsm;*.wsf;*.wsf;*.hta;*.htc
filter.winscript=vbScript (vbs wsf)|$(file.patterns.winscript)|

# ---- * Wildcard is used to collect marked properties
# ----  used to dynamically build the Language Menu. the following ones were added to vb.properties
*filter.winscript=$(filter.winscript)
*source.patterns.winscript=$(file.patterns.winscript);

# Uncomment if you want to display vbScript in the Language menu
*language.winScript=vbScr&ipt|vbs||

lexer.$(file.patterns.winscript)=freebasic
word.chars.winscript= $(chars.alpha)$(chars.numeric)-'#
word.characters.$(file.patterns.winscript)=$(word.chars.winscript)

# --------- Syntax Highlitening
# ---- Begin wsh.keywords
# Code Flow & Methods use style2

keywordclass.wshFlow= \
private public binary const byref byval date dim end elseif exit function for each in do while wend loop else empty error false for get not and or \
input if is len let lock me mid new next nothing null on option optional redim preserve sub set step string then time to true withevents resume

keywordclass.wshMethods= \
addprinterconnection addwindowsprinterconnection appactivate close connectobject count createobject createscript createshortcut \
disconnectobject echo enumnetworkdrives enumprinterconnections exec execute exists expandenvironmentstrings \
getobject getresource item logevent mapnetworkdrive popup quit read readall readline regdelete regread regwrite \
remove removenetworkdrive removeprinterconnection run save sendkeys setdefaultprinter showusage sign signfile \
specialfolders skip skipline sleep terminate verify verifyfile write writeblanklines writeline  stderr stdin stdout \
item status line hotkey iconlocation environment windowstyle workingdirectory \
opentextfile openastextstream deletefile

keywordclass.wshFunctions= \
abs array asc atn cbool cbyte ccur cdate cdbl chr cint clng conversion cos csng cstr date dateadd \
datediff datepart dateserial datevalue day escape eval exp filter formatcurrency formatdatetime formatnumber \
formatpercent getlocale getref hex hour inputbox instr instrrev int isarray isdate isempty isnull isnumeric \
isobject join lbound lcase left len loadpicture log trim math mid minute month monthname msgbox now oct replace \
rgb right rnd round scriptengine scriptenginebuildversion scriptenginemajorversion scriptengineminorversion second \
setlocale sgn sin space split sqr strcomp string strreverse tan time timer timeserial timevalue typename ubound ucase \
unescape vartype weekday weekdayname year

keywordclass.wshproperties= \
arguments atendofline atendofstream buildversion character column computername currentdirectory description  \
error exitcode fullname interactive length line name named number path processid relativepath scriptfullname scriptname \
source sourcetext status targetpath unnamed userdomain username id helpstring type required guid progID \
hookevents version language src many width height visible

# objects / tags
keywordclass.wshRootObjects= \
<?job?> <?xml?> <description> <example> <job> <named> <object> <package> <reference> <resource> <runtime> \
<script><named> <unnamed> <usage>  scriptingsigner wscript arguments controller environment \
named network remote remoteerror scriptexec shell shortcut specialfolders unnamed urlshortcut  _end _error _start err

#https://msdn.microsoft.com/de-de/library/microsoft.visualbasic.constants_fields(v=vs.110).aspx
keywordclass.vbConstants= \
vbabort vbabortretryignore vbapplicationmodal vbarchive vbarray vbback vbbinarycompare vbboolean vbbyte vbcancel \
vbcr vbcritical vbcrlf vbcurrency vbdate vbdecimal vbdefaultbutton1 vbdefaultbutton2 vbdefaultbutton3 vbdirectory \
vbdouble vbempty vbexclamation vbfalse vbfirstfourdays vbfirstfullweek vbfirstjan1 vbformfeed vbfriday vbgeneraldate \
vbget vbhidden vbhide vbhiragana vbignore vbinformation vbinteger vbkatakana vblet vblf vblinguisticcasing vblong \
vblongdate vblongtime vblowercase vbmaximizedfocus vbmethod vbminimizedfocus vbminimizednofocus vbmonday vbmsgboxhelp \
vbmsgboxright vbmsgboxrtlreading vbmsgboxsetforeground vbnarrow vbnewline vbno vbnormal vbnormalfocus vbnormalnofocus \
vbnull vbnullchar vbnullstring vbobject vbobjecterror vbok vbokcancel vbokonly vbpropercase vbquestion vbreadonly vbretry \
vbretrycancel vbsaturday vbset vbshortdate vbshorttime vbsimplifiedchinese vbsingle vbstring vbsunday vbsystem vbsystemmodal \
vbtab vbtextcompare vbthursday vbtraditionalchinese vbtrue vbtuesday vbuppercase vbusedefault vbuserdefinedtype vbusesystem \
vbusesystemdayofweek vbvariant vbverticaltab vbvolume vbwednesday vbwide vbyes vbyesno vbyesnocancel


# ---- End wsh.keywords
# flow of control aka if else do loop ....
keywords.$(file.patterns.winscript)=$(keywordclass.wshFlow)
keywords2.$(file.patterns.winscript)=$(keywordclass.wshproperties) $(keywordclass.vbConstants)
# specials (objects, Selectors)
keywords3.$(file.patterns.winscript)=$(keywordclass.wshRootObjects) $(keywordclass.wshMethods)
keywords4.$(file.patterns.winscript)=$(keywordclass.wshFunctions)

# ------- Calltips ( api parameter)
autocomplete.freebasic.start.characters=$(chars.alpha)$(chars.numeric)$_<
autocomplete.freebasic.ignorecase=1
autocomplete.freebasic.choose.single=0
autocompleteword.freebasic.automatic=0
autocomplete.freebasic.fillups=(
autocomplete.freebasic.typesep=?

#------ \t\n makes a calltip multiline
calltip.freebasic.use.escapes=1
calltip.freebasic.word.characters=$(chars.alpha)$(chars.numeric)
calltip.freebasic.ignorecase=1
calltip.freebasic.end.definition=)
calltip.freebasic.parameters.start=( 
calltip.freebasic.parameters.separators=,
calltip.freebasic.parameters.end=) 

api.$(file.patterns.winscript)=$(SciteUserHome)/user/languages/system/vbs_11_2018.api

# -------- Comments
comment.block.winscript='~

# -------- Indentation
statement.indent.$(file.patterns.winscript)=3 else elseif for  if while
indent.maintain.$(file.patterns.winscript)=1
#statement.lookback.$(file.patterns.winscript)=20
#comment.block.at.line.start.winscript=1

# ---------Wsh styles are Freebasic Styles

command.help.$(file.patterns.winscript)=$(CurrentWord)!C:\Program Files\Microsoft Visual Studio\MSDN\2001OCT\1033\MSDN130.COL
command.help.subsystem.$(file.patterns.wscript)=4

# Normal go Comand. Use wScript for GUI Iteractions, or cScript for console.
command.go.$(file.patterns.winscript)=cscript.exe //Nologo  $(FilePath)
command.go.subsystem.$(file.patterns.winscript)=0

# note we have no real "build"; rather "execute and capture
# compiletime and runtime errors"
command.build.$(file.patterns.winscript)=cscript.exe //Nologo $(FilePath)
command.build.subsystem.$(file.patterns.winscript)=2
