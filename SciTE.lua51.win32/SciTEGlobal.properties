   Global initialisation file for SciTE
   Documentationn at http://www.scintilla.org/SciTEDoc.html see https://groups.google.com/forum/!forum/scite-interest

env.home: simply points to %userprofile%
env.scite_userhome: Defaults to SciteDefaultHome but can be changed to use another, eg writeable Path.
To use: move Dirs doc and user as well as SciTEUser.properties to the location below:
#  env.scite_userhome=$(env.home)\Documents\scite\profile32

#Sets Statusbar2 Information
#VersionMsg=myScite.MartyMcFly
#Release=mySciTE_MartyMcFly_lua53_win32

#Set to 1 enables directory specific config files.
#properties.directory.enable=1

# Save and Load 
#Save File automatically (in seconds)
#save.on.time=140

#Set to 1 will save current session config automatically to a file "SciTE.session"
#save.session=1

Setting save.recent causes the most recently used files list to be saved on exit in the session file and read at start up.
save.recent=1
session.bookmarks=1
session.folds=1

The load.on.activate property causes SciTE to check whether the current file has been updated by another
process whenever it is activated. This is useful when another editor such as a WYSIWYG HTML editor,
is being used in conjunction with SciTE.
load.on.activate=1

The save.on.deactivate property causes SciTE to save the file whenever the SciTE application loses focus.
This is useful when developing web pages and you want to often check the appearance of the page in a browser.
save.on.deactivate=1

When set to 1, reloading a file does not delete all the undo history.
This is useful when load.on.activate is used in conjunction with filter commands.
reload.preserves.undo=1

Setting save.position causes the SciTE window position on the desktop to be restored at start up.
save.position=1

Setting save.find cause the "Find what" and " with" to be saved in the session file.
save.find=1
save.on.timer=140
check and signal File modifications
save.check.modified.time=1
save.all.for.build=1
save.on.deactivate=1

#  Window 
A large proportion of the time spent in the editor is used to lay out text prior to drawing it.
This information often stays static between repaints so can be cached with these settings.
There are four levels of caching. 0 is no caching, 1 caches the line that the caret is on,
2 caches the visible page as well as the caret, and 3 caches the whole document.
The more that is cached, the greater the amount of memory used, with 3 using large amounts of memory,
7 times the size of the text in the document. However, level 3 dramatically speeds up dynamic wrapping
by around 25 times on large source files so is a very good option to use when wrapping is turned on and
memory is plentiful.
cache.layout=3
output.cache.layout=3

If there is another copy of SciTE open, set the initial window position to be with the left side at position.left + position.width
so that most of the time you can see both copies at once without overlap. Works nicely if position.left set to 0 and position.width set to half of the screen width.
position.tile=1

Set the initial positon and size of Scite
position.maximize=1
position.left=40
position.top=60
position.width=$(scale 720)
position.height=$(scale 300)

Add a margin to the editor Window
blank.margin.left=0
blank.margin.right=0

technology=1
Add magnification to used font size
magnification=0

Set end.at.last.line to 0 to allow scrolling one page below the last line.
end.at.last.line=0

undo.redo.lazy=1
minimize.to.tray=1
fileselector.show.hidden=1

Set to 2 antialiasised Fonts 3 LCD Optimized.
font.quality=2

If a character overhangs the end of a run, such as in "V_" where the "V" is in a different style from the "_",
then phases.draw 0 can cause the right hand side of the "V" to be overdrawn by the background of the "_" which cuts it off.
(phases.draw=2) drawing draws the whole area multiple times, once for each feature,
building up the the appearance in layers or phases. (fixes above) but is incompatible with buffered draw.
phases.draw=2

Setting this to 1 rather than the default 0 may make SciTE draw output into a buffer bitmap first
and then to the screen instead of directly ffullto the screen.
On old platforms and some unusual modes this can result in less flickering. but is slower.
Has no effect on OS X and may have no effect on other platforms or technology choices.
buffered.draw=0

 1 - a small amount of styling is performed before display and then further styling is performed incrementally in the background
 2 - Text after the currently visible portion may be styled in the background.
 3 - style completely in the background.
idle.styling=2

#  Menu 
full.screen.hides.menu=1
menubar.detachable=1

Crusor Blink Rate
dwell.period=300

#  Toolbar
toolbar.large=0

#  Output pane 
If split.vertical is set to 1 then the output pane is to the right of the editing pane, if set to 0 then
the output pane is below the editing pane.
split.vertical=0

The output.*.size settings determine the initial size of the output pane.
output.vertical.size=50
output.horizontal.size=80

If output.initial.hide is 1, then the output pane is hidden when SciTE first
starts up even when output.*.size is set; otherwise the output pane is shown at startup.
output.initial.hide=1
output.magnification=0
output.scroll=1
output.horizontal.scrollbar=1
output.horizontal.scroll.width=20
output.vertical.scroll.width=20
output.horizontal.scroll.width.tracking=0

#  Titlebar 
Chooses how the file name is displayed in the title bar.
When 0 (default) the file name is displayed.
When 1 the full path is displayed.
When 2 the window title displays "filename in directory".
title.show.buffers=0
title.full.path=1

# Status bar 
Sets Statusbar Information. Click on the Status bar to switch between them.
statusbar.visible=0
statusbar.number=2
status.msg.words_found=| Words Found: $(highlight.current.word.counter)

statusbar.text.1=$(project.info)  | ($(OverType)) $(encoding) |  Chars selected $(SelLength) $(status.msg.words_found)  | File Lenght $(BufferLength) Bytes  |  Line $(LineNumber) / $(NbOfLines) | Column $(ColumnNumber)
statusbar.text.2=Timestamp: $(FileDate) $(FileTime) | Lexer "$(Language)" | $(SciteUserHome) | $(VersionMsg)  $(CurrentMessage) $(UserMsg) $(status.msg)

# Tab Bar 
Maximum number of tabs (file buffer)
buffers=10
Hide tab bar if there is only one tab
tabbar.hide.one=1
tabbar.visible=1
tabbar.multiline=0
tabbar.title.maxlength=25
tabbar.readonly.marker= R
tabbar.tab.close.on.doubleclick=1
 create new tab next the current one
buffers.new.position=1
 buffer ordering for Ctrl+T by buffer number
buffers.zorder.switching=1
pathbar.visible=1

#  Scrolling 
horizontal.scrollbar=0
horizontal.scroll.width=14
vertical.scroll.width=14
horizontal.scroll.width.tracking=1

#  Indentation style
 Setting view.whitespace to 1 makes SciTE start up with whitespace visible.
view.whitespace=1

 Setting view.indentation.whitespace to 0 hides visible whitespace inside indentation.
 Setting view.indentation.whitespace to 1 makes indentation whitespace visible
 Setting view.indentation.whitespace to 2 makes indentation whitespace only visible
view.indentation.whitespace=1

 Set  view.indentation.examine to 1 to display guides within real indentation whitespace only,
 Set to 2  to display whitespace according to the next non-empty line (good for Python)
 or  3 according to both the next and previous non-empty lines (good for most languages).
view.indentation.examine=3

 Set view.indentation.guides  to 1  display dotted vertical lines within indentation white space every  -> indent.size columns.
view.indentation.guides=1

Setting highlight.indentation.guides to 1 highlights the indentation guide associated with a selected brace
highlight.indentation.guides=1

indent.opening and indent.closing=0 results to:
  if (c)
	{
     s;
  }

indent.opening=0
indent.closing=0

Define the indentation size here
indent.size=3

Set indent.auto to 1 then indent.size and use.tabs are set according to the contents of the opened document.
indent.auto=0

Automatic indentation may be changed to simply repeat the indentation of the previous line
for some files with indent.maintain.filepattern=1 which overrides the other language specific settings.
indent.maintain.*=1

indent with tabs instead of spaces
use.tabs=1

Set the size of whitespace inserted when pressing tab
tabsize=4

Set to 1 to cause pressing tab within indentation whitespace indents by indent.size rather than inserting a tab character.
tab.indents=1

Set to 1 to cause pressing backspace within indentation whitespace unindents by indent.size rather than deleting the character before the caret.
backspace.unindents=1

For Python code, checks whether indenting is consistent. 1 checks whether each line is potentially inconsistent with the previous line
tab.timmy.whinge.level=1

#  Carets 
Sets the width of the caret in pixels. Only values of 1, 2, or 3 work.
caret.width=1

#  xslop and yslop define, where the caret wont go. 
# This zone is defined as a number of pixels near the vertical margins, and as a number of lines near the horizontal margins.
caret.period=500
caret.sticky=1
caret.additional.blinks=0
caret.policy.xslop=1
caret.policy.width=20
caret.policy.xstrict=0
caret.policy.xeven=0
caret.policy.xjumps=0
caret.policy.yslop=1
caret.policy.lines=1
caret.policy.ystrict=1
caret.policy.yeven=1
caret.policy.yjumps=0

#  Folds 
Enable folding, and show lines below when collapsed.
fold=1

Set to 1 to automatically fold files as much as possible when loaded.
fold.on.open=0

Set fold.preprocessor 1 to enable folding preprocessor directives when using the C++ lexer.
Includes C's explicit region and endregion folding directives.
fold.preprocessor=1

This option enables folding multi-line comments
fold.comment=1
fold.html=1

Sets the width of the fold margin.
fold.margin.width=4

Set fold.symbols setting to 0 (the default) for MacOS style arrows.
Set to 1 to indicate contracted (facing right) and expanded (facing down)
Set to 2 to display contracted folds with "+" and expanded with "-"  (flattened tree control with round headers and rounded joins)
Set to 3 for a flattened tree control with square headers.
fold.symbols=1

For HTML, XML, Lua and C++ and similar files ...
turning this option on leads to blank lines following the end of an element folding with that element.
fold.compact=0

not really documented ;) bit flags which may go away.
Set to 2, 4, 8, and 16 controls drawing lines above and below folding lines if expanded or not expanded.
Set to 64 to help debug folding by showing hexadecimal fold levels in margin.
fold.flags=16

Set to 1 to enable highlight for current folding block (smallest one that contains the caret).
By default, it's disable. n ote : The highlight is enabled only when fold.symbols equals to 2 or 3
fold.highlight=0

#  Wrapping 
If wrap set to 1 then the edit pane is dynamically line wrapped. If output.wrap set to 1
then the output pane is dynamically line wrapped. These options have a high performance cost
which is proportional to the amount of text so should be turned off for large documents on slow machines.
wrap=0
output.wrap=1

Chooses between word wrapping (1, the default) and character wrapping (2).
Character wrapping is a better choice for Asian languages with no spaces between words.
wrap.style=1

Flags to display markers at end and begin of wrapped lines for visual identify them.
Set to 0 to not display markers (default). Set to 1 to display markers at end of wrapped lines,
to 2 to display markers at begin of wrapped lines and to 3 to display markers at begin and end.
wrap.visual.flags=3

Sets the indention of continued wrapped lines to better visually identify the wrapping.
Default is 0 (no indention). n ote if wrap.visual.flags is 2 or 3 (begin marker displayed)
the line is indented at least 1, even if wrap.visual.startindent is still 0.
wrap.visual.startindent=2

Wrapped sublines can be indented in various ways relative to the initial subline.
Default mode 0 indents sublines to the left of window plus wrap.visual.startindent.
Mode 1 aligns sublines to the first subline. Mode 2 aligns sublines to the first subline plus one more level of indentation.
wrap.indent.mode=0

#  Find 
This is the default set of files to search through using the Find in Files command.
The find.files property can contain a list of sets of files separated by '|' like "*.cxx *.h|*.py *.pyw|*.html"
which adds three entries to the history and uses the first as the default value.
The evaluation of this setting is a little unusual in that each entry in the value from the property files is
 appended to the end of the history if that entry is not already present.
This means that opening files from different directories will result in any local setting of find.files
being added to the list.
find.files=*.txt *.html *.htm *.xml *.java *.js *.properties *.css *.c *.cxx *.h| *.*

If find.in.binary is 1 then Find in Files displays matches in binary files.
For Find in Files, a binary file is a file that contains a n UL byte in the first 64K block read from the file.
find.in.binary=0

Enable the button "in Buffers" in the dialogue and change the checkbox to search for a specific style
find.advanced=1

Use in-window strips rather than dialogs for performing Find or Replace commands.
find.use.strip=0

Change to the regular expression library provided by the C++ compiler that SciTE was built with
find.replace.regexp.cpp11=1

Perform incremental search when typing in the find and replace strips.
Set to 1 to enable incremental searching and 2 to enable both incremental searching and highlighting all matches.
Highlighting all matches (2) can be slow on large files so should only be enabled when performance is reasonable.
find.strip.incremental=2

Searchbox will be evaluted as a Reglar expression by default.
find.*.regexp=0
If set to 0 (the default), characters '(' and ')' must be escaped by '\' to behave as regexp meta characters. If set to 1, these characters are meta characters itself.
find.*.regexp.posix=1

If the find.replacewith.focus property is set, the Replace With input box is focused in the Replace dialog if Find What is non-empty.
find.replacewith.focus=1
find.*.wrap=1
find.in.files.close.on.find=0
find.close.on.find=0
find.in.dot=1
find.*.matchcase=1
find.*.escapes=1

Internal search always available with recursive capability so use external tool in preference too
find.command=

if PLAT_GTK
 find.command=grep --line-number "$(find.what)" $(find.files)

 Save and Load 
The  *open.filter setting collects all * tagged source | filter and Langage roperties
so, gather all settings with "*source." prefix from all active .properties files
source.files=$(star *source.patterns.)
source.all.filter=All Source|$(source.files)|

Gather all settings with "*filter." prefix from all active .properties files
list.filters=$(star *filter.)|

open.filter=$(top.filters)$(list.filters)
save.filter=$(open.filter)

Each platform has a different idea of the most important filters
if PLAT_WIN
 all.files=All Files (*.*)|*.*|
 top.filters=$(source.all.filter)$(all.files)
if PLAT_GTK
 all.files=All Files (*)|*|Hidden Files (.*)|.*|
 top.filters=$(source.all.filter)$(all.files)
 As OS X only greys out filtered files, show all as default
if PLAT_MAC
 all.files=All Files (*.*)|*.*|
 top.filters=$(all.files)$(source.all.filter)

Set this  option to 1 to allow opening files in an existing instance of SciTE rather than always
opening a new instance. On GTK+, an arbitrary instance opens the file.
check.if.already.open=0

Defines the language mode used before the file has a name.  For example,  if default.file.ext=.py,
then when the new command is used to create a new file  then Python syntax styling is used.
default.file.ext=.txt

when a file has no extension, the property "source.default.extensions" is used to
provide default extensions when attempting to match the file name to an existing file.
source.default.extensions=.cxx|.h|.js|.bat

Ensures all lines end with the current Line End Characters setting when saved.
ensure.consistent.line.ends=1

Ensures file ends with a line end char when saved.
ensure.final.line.end=1

Strips trailing white spaces from the file while saving.
strip.trailing.spaces=1

Setting this to 1 makes SciTE open dropped files (located in the temporary directory) immediately.
temp.files.sync.load=1

Ask if a user chosen File is larger than max.file.size in Mb
max.file.size=20485759

Magically switch to the null Lexer for files greater then max.style.size (Defaults to 10Mb)
max.style.size=20485759

Set the openFile Dialog to start with the currently opened Files Path
open.dialog.in.file.directory=1

#  Editor Behaviour 
displays line ends CR|LF}
view.eol=0

This setting overrides the eol.mode value. It sets the line ending to whats used the most in the file.
eol.auto=1
eol.mode=LF

Allow multiple Selections with Alt and Mouse.
selection.multiple=1
Allow typing backspace and delete in Multiple Selections
selection.additional.typing=1
Allow to paste at all selections
selection.multipaste=1

selection.additional.fore
selection.additional.back
selection.additional.alpha

Set to 1 to allow movin to virtual space when making a rectangular selection.
2 allows arowKeys/Mouse to operate in Multiple Selections 3 allow 1 and 2
virtual.space=1

When a command is completed, print the time it took in seconds.
time.commands=1

xml.auto.close.tags=1
braces.check=1
braces.sloppy=1
clear.before.execute=0
vc.home.key=1
wrap.aware.home.end.keys=1
visible.policy.strict=1
visible.policy.slop=1
visible.policy.lines=4

#  Display markers 
 Display a column guide to indicates long lines. (1 Vertical ruler | 2 show chars in edge.colour  beginning from edge.column)
 For proportional fonts, an edge.mode of 2 is more useful than 1.
edge.mode=0
edge.column=300
edge.colour.back=#444444

Flags to set the location of the display markers (if enabled) near to text or near to border.
Set to 0 to have begin and end markers near to border (default).
Set to 1 to have end markers near text, to 2 to have begin markers near text and to 3 to have all markers near text.
wrap.visual.flags.location=2

If set, then the Mark All command in the Find dialog will draw indicators over each string found.
See SciTEDoc.htmlIndicatorProperty
find.mark.indicator=style:roundbox,colour:0080C0,outlinealpha:170,fillalpha:35
find.indicator.incremental=style:roundbox,colour:#FBF4DE

#   Indicators 
Shows all occurences of the word under the caret in the current window.
highlight.current.word=0
highlight.current.word.by.style=0
highlight.current.word.indicator=style:roundbox,colour:#111111,outlinealpha:40,fillalpha:20

To see error messages interspersed with the source code, set error.inline=1 and press F4
error.inline=1
error.select.line=1
error.jump.to.first=1

Error  0 default / 1 warning / 2 error / 3 fatal
error.marker.fore=550403
error.marker.back=550403
style.error.0=$(colour.default),$(font.monospace)
style.error.1=fore:A48850,$(font.monospace),size:7,bold,
style.error.2=fore:A45540,$(font.monospace),size:7,bold
style.error.3=fore:A43335,$(font.monospace),size:7,bold

#  Line Numbers 
Show line numbers, expand if needed
line.margin.visible=1
line.margin.width=4+
margin.width=$(scale 4)

#  Confirm Settings 
are.you.sure.on.reload=1
are.you.sure=1

#  Questions 
are.you.sure.for.build=1
quit.on.close.last=1
reload.preserves.undo=1
check.if.already.open=1
temp.files.sync.load=1
save.deletes.first=1
#read.only=1
background.open.size=20000
background.save.size=20000

#  Export Settings 
export.html.wysiwyg=1
export.html.styleused=1
export.html.folding=1
export.html.tabs=1
export.html.title.fullpath=1
export.rtf.tabs=1
export.rtf.font.face=Arial
export.rtf.font.size=9
export.rtf.tabsize=8
export.keep.ext=1

#  Magnification 
(added to default screen font size)
export.pdf.magnification=1
 Font: Courier, Helvetica or Times (Courier line-wraps)
export.pdf.font=Courier
 Page size (in points): width, height
 E.g. Letter 612,792; A4 595,842; maximum 14400,14400
export.pdf.pagesize=595,842
 Margins (in points): left, right, top, bottom
export.pdf.margins=72,72,72,72
export.xml.collapse.spaces=1
export.xml.collapse.lines=1

#  Help Command 
if PLAT_WIN
 command.scite.help="$(SciteUserHome)\doc\SciTE\SciTE.html"
 command.scite.help.subsystem=2
 command.scite.help.shortcut=F1

if PLAT_GTK
 command.scite.help=xdg-open file://$(SciteUserHome)/doc/SciTE/SciTEDoc.html

#  Print 
Windows only
if PLAT_WIN
 print.colour.mode=1
 print.magnification=-1
 Setup: left, right, top, bottom margins, in local units:
 hundredths of millimeters or thousandths of inches
 print.margins=1400,1000,1000,1400
 Header/footer:
 && = &; &p = current page
 &d = file date; &D = current date
 &f = file name; &F = full path
 &t = file time; &T = full time
 print.header.format=$(FilenameExt) Ã—Â Printed on $(CurrentDate), $(CurrentTime) Ã—Â Page $(CurrentPage)
 print.footer.format=$(FilePath) Ã—Â File date: $(FileDate) Ã—Â File time: $(FileTime)
 Header/footer style
 print.header.style=font:Arial,size:11,bold
 print.footer.style=font:Arial n arrow,size:10,italics

#  Charsets
for imported property files
chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜß
chars.numeric=0123456789

#  Internationalisation 
 Define friendly Names for Charsets
8859_15=1000
ANSI=0
ARABIC=178
BALTIC=186
CHINESEBIG5=136
CYRILLIC=1251
DEFAULT=1
EASTEUROPE=238
GB2312=134
GREEK=161
HANGUL=129
HEBREW=177
JOHAB=130
MAC=77
OEM=255
OEM866=866
RUSSIAN=204
SHIFTJIS=128
SYMBOL=2
THAI=222
TURKISH=162
VIETNAMESE=163

  "code.page" been set to 65001 means Unicode (UTF-8) Interpretation.
  Correct glyphs (for Unicode)  may only be displayed if fonts are chosen that contain the appropriate glyphs.
  The Tahoma font contains a wide range of glyphs so may be a good choice.
code.page=65001
character.set=$(8859_15)
output.code.page=65001

  "Default" Ansi
  some Apps, eg wins Notepad, still saves files as ASCII, if not told to use UTF8 instead.
  Additionally, some Files are encoded as utf8, but dont come with a BOM header identifying them.
  so if some common Glyphs like (german Umlauts aka Ä), dont show up correctly,
  you may decide to force ansi interpretation with character.set=0
  win cmd.exes internal commands use (OEM_CHARSET=255)
code.page=0
output.code.page=255

  Traditional CodePages are supported too.
  932 (Japanese Shift-JIS), 936 (Simplified Chinese GBK),  949 (Korean Unified Hangul Code),
  950 (Traditional Chinese Big5), or 1361 (Korean Johab) ore even 1251 (Cyrillic)
code.page=932
character.set=$(SHIFTJIS)

if PLAT_GTK
   Required for Unicode to work on GTK+:
 code.page=65001
 output.code.page=65001
 LC_CTYPE=en_US.UTF-8

if PLAT_MAC
 code.page=65001
 output.code.page=65001
 LC_CTYPE=en_US.UTF-8


#  Lua 
lexer.lpeg.home=$(SciteUserHome)/user/opt/lua-scite/scintillua
lua.prompt=lua $(SciteUserHome)/user/opt/mod-scite-debug/ilua.lua -i
ext.lua.debug.traceback=1
ext.lua.directory=$(SciteUserHome)\user\opt\lua-scite
ext.luamodules.directory=$(SciteUserHome)/user/opt/lua-scite
ext.lua.startup.script=$(SciteUserHome)/user/opt/scitestartup.lua
ext.lua.auto.reload=1
ext.lua.reset=0
spawner.extension.path=$(ext.luamodules.directory)
