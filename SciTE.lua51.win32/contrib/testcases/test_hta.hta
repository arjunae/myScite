<html>
   <head>
      <title>VBScriptInt.josep.valls</title>
      <hta:application
         applicationName="VBScriptInt" border="dialog" borderstyle="normal" caption="yes" contextMenu="no" id="App" innerborder="no" 
         maximizebutton="no" minimizebutton="yes" navigable="no" scroll="no" selection="no" showintaskbar="yes" singleinstance="no"
         sysmenu="yes" version="1.0" icon="cscript.exe" windowstate="normal"
         />
      <style type="text/css">
         <!--
            body{	font-family: "Arial, Helvetica, sans-serif";
            		font:Menu;
            		background-color:Menu;
            		color:MenuText;
            		font-size: 8pt;
            		cursor:default; //auto, text, pointer
            	}
            .texto {  font-family: fixedsys}
            -->
      </style>
   </head>
   <body>
      <form name="frmPrincipal" onSubmit="return false;">
         <div id="divCode" style="display: inline;">
            <textarea name="txtInput" cols="86" rows="15" class="texto">
            </textarea>
            <br>
            <input type="text" name="txtRetVal" size="86" value="" class="texto">
            <br>
            <textarea name="txtOutput" cols="86" rows="5" class="texto"></textarea>
            <br>
            <input type="button" name="cmdEvaluate" value="">
            <input type="reset" name="cmdReset" value="">
            <input type="button" name="cmdSample" value="">
            <input type="button" name="cmdRef" value="">&nbsp;
         </div>
         <div id="divUtils" style="display: none;">
            <textarea name="txtInputE" cols="86" rows="6" class="texto"></textarea>
            <br>
            <select name="selEncode">
               <option value="0" selected>custom replace:</option>
               <option value="1">text - VB</option>
               <option value="2">text - VB (Multi line)</option>
               <option value="3">VB - text</option>
               <option value="4">HTML (br lt gt amp)</option>
               <option value="5">HTML (ISO 8859-1)</option>
            </select>
            <input type="text" name="txtMultiReplace" size="69" value="&quot;|&quot;&quot;|e|3|t|7|i|1" class="texto"><br>
            <input type="button" name="cmdEncode1" value="">
            <input type="button" name="cmdEncode2" value="">
            <input type="button" name="cmdEncode3" value="">
            <input type="button" name="cmdEncode4" value="">
            <input type="button" name="cmdEncode5" value="">
            <textarea name="txtOutputE" cols="86" rows="6" class="texto"></textarea>
            <br>
            <div style="margin-bottom: 2px;">
               <div style="float:left;"><label>Input:<br><input name="txtFile" type="file" id="txtFile"></label>&nbsp;</div>
               <div style="float:left;"><label>Output:<br><input name="txtFileOut" type="file" id="txtFileOut"></label>&nbsp;</div>
               <div style="clear:left;">
                  <label><input type="radio" name="vCode" value="hex" checked>&nbsp;HEX</label>
                  <label><input type="radio" name="vCode" value="base64">&nbsp;Base 64</label>
                  <label><input type="radio" name="vCode" value="editor">&nbsp;Hex. Editor</label>
                  <label><input type="radio" name="vCode" value="editor2">&nbsp;Dec. Editor</label>
                  <label><input type="radio" name="vCode" value="comp1">&nbsp;Binary VBS</label>
               </div>
               <br>
               <input type="button" name="cmdEncode" value="">
               <input type="button" name="cmdDecode" value="">
               <input type="button" name="cmdJIT" value="">
               <input type="button" name="cmdRefresh" value="" onClick="vbscript:Location.Reload(True)">
               <br>
            </div>
         </div>
         <input type="button" name="cmdUtils" value="">
         <input type="button" name="cmdAbout" value="">
         <select name="selLanguage">
            <option value="0" selected>Change language...</option>
            <option value="3">Display in English</option>
            <option value="1">Mostrar en Espa&ntilde;ol</option>
            <option value="2">Mostrar en Catal&agrave;</option>
         </select>
         <input type="button" name="cmdQuit" value="" onClick="window.close();">
         <br>
         <textarea name="txtNotas" cols="86" rows="6" class="texto"></textarea>
         <!-- 
            --------------------------------------------------------------------------------
            ------------------------------ Begin code section ------------------------------
            --------------------------------------------------------------------------------
            
            -->
         <SCRIPT LANGUAGE="VBScript">
            UItraceString=""
            sub UItrace(strtext)
            	document.frmPrincipal.txtRetVal.value = "UItraceString"
            	if UItraceString <> "" then UItraceString = UItraceString & vbCrLf
            	UItraceString = UItraceString & strtext
            end sub
            sub UItracevar(var)
            	document.frmPrincipal.txtRetVal.value = "UItraceString"
            	if UItraceString <> "" then UItraceString = UItraceString & vbCrLf
            	UItraceString = UItraceString & var & " (" & TypeName(var) & ")"
            end sub
            sub UIclear()
            	UItraceString=""
            end sub
             
         </SCRIPT>
         <SCRIPT FOR="cmdEvaluate" EVENT="onClick" LANGUAGE="VBScript">
            on error resume next
            UIclear
            execute document.frmPrincipal.txtInput.value
            if err.number then
            	document.frmPrincipal.txtNotas.value = document.frmPrincipal.txtNotas.value & vbCrLf & "Error #" & err.number & " " & err.description
            	if msgbox("Error #" & err.number & " " & err.source & vbCrLf & err.description & vbCrLf & aStrings2(0,vLanguage),vbYesNo) = vbYes then err.clear
            end if
            if not err.number then
            	err.clear
            	evalResultado = eval(document.frmPrincipal.txtRetVal.value)
            	if err.number then
            		msgbox "Error #" & err.number & vbCrLf & err.description
            		document.frmPrincipal.txtNotas.value = document.frmPrincipal.txtNotas.value & vbCrLf & "Error #" & err.number & " " & err.description
            	end if
            end if
            document.frmPrincipal.txtOutput.value = evalResultado
              
         </SCRIPT>
         <SCRIPT FOR="cmdRef" EVENT="onClick" LANGUAGE="VBScript">
            document.frmPrincipal.txtInput.value = "" & _
            "Dim fso, f, xml, node, a, b, c" & vbCrLf & _
            "Set fso = CreateObject(""Scripting.FileSystemObject"")" & vbCrLf & _
            "Set f = fso.GetFile(replace(unescape(document.location),""file:///"",""""))" & vbCrLf & _
            "UItrace(f.name)" & vbCrLf & _
            "set xml = CreateObject(""MSXML2.DOMDocument"")" & vbCrLf & _
            "set node = xml.createElement(""node"")" & vbCrLf & _
            "node.setAttribute ""date"", f.DateLastModified" & vbCrLf & _
            "xml.appendChild node" & vbCrLf & _
            "a = now" & vbCrLf & _
            "b = f.DateLastModified" & vbCrLf & _
            "c = node.getAttribute(""date"")" & vbCrLf & _
            "d = cdate(c)" & vbCrLf & _
            "UItracevar(a)" & vbCrLf & _
            "UItracevar(b)" & vbCrLf & _
            "UItracevar(c)" & vbCrLf & _
            "UItracevar(d)" & vbCrLf & _
            "UItrace(xml.xml)"
              
         </SCRIPT>
         <SCRIPT FOR="cmdSample" EVENT="onClick" LANGUAGE="VBScript">
            document.frmPrincipal.txtInput.value = "msg = " & chr(34) & "escriba aqui" & chr(34) & vbCrLf & "msg = msg & " & chr(34) & " su código" & chr(34) & vbCrLf & "document.frmPrincipal.txtOutput.value" & " = " & chr(34) & ", cualquier expresión WSH" & chr(34)
            document.frmPrincipal.txtOutput.value = aStrings2(1,vLanguage)
            document.frmPrincipal.txtRetVal.value = "msg & document.frmPrincipal.txtOutput.value 'resultado a visualizar" 
              
         </SCRIPT>
         <SCRIPT FOR="cmdAbout" EVENT="onClick" LANGUAGE="VBScript">
            msgbox aStrings2(2,vLanguage)
              
         </SCRIPT>
         <SCRIPT FOR="cmdUtils" EVENT="onClick" LANGUAGE="VBScript">
            if divUtils.style.display="none" then
            	divCode.style.display="none"
            	divUtils.style.display="inline"
            else
            	divCode.style.display="inline"
            	divUtils.style.display="none"
            end if
              
         </SCRIPT>
         <SCRIPT FOR="cmdJIT" EVENT="onClick" LANGUAGE="VBScript">
            Set Sh = CreateObject("WScript.Shell")
            key = "HKEY_CURRENT_USER\Software\Microsoft\Windows Script\Settings\JITDebug"
            if msgbox(aStrings2(5,vLanguage),vbYesNo) = vbYes then value = 1 : else value = 0
            Sh.RegWrite key, value, "REG_DWORD"
         </SCRIPT>
         <SCRIPT FOR="cmdEncode" EVENT="onClick" LANGUAGE="VBScript">
            Const ForReading = 1, ForWriting = 2, ForAppending = 8
            Const Base64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
            Dim fso, f, Msg
            Set fso = CreateObject("Scripting.FileSystemObject")
            vCancel = false
            if not fso.fileexists(document.frmPrincipal.txtFile.value) then
            	vCancel = true
            else
            	Set f = fso.getfile(document.frmPrincipal.txtFile.value)
            	if f.size > 100*1024 then
            		if msgbox(aStrings2(4,vLanguage),vbYesNo+vbDefaultButton2)=vbNo then vCancel = true
            	end if
            end if
            if not vCancel = true then
            	Set f = fso.OpenTextFile(document.frmPrincipal.txtFile.value, ForReading)
            	if document.frmPrincipal.txtFileOut.value = "" then
            		vFileOut = document.frmPrincipal.txtFile.value & ".txt"
            	else
            		vFileOut = document.frmPrincipal.txtFileOut.value 
            	end if
            	Set f2 = fso.OpenTextFile(vFileOut, ForWriting, True)
            	document.frmPrincipal.txtNotas.value = document.frmPrincipal.txtNotas.value & vbCrLf & document.frmPrincipal.txtFile.value & " -> " & vFileOut
            	if document.frmPrincipal.vCode(0).checked then
            	'HEX
            		Do While Not f.AtEndOfStream
            			myByte = hex(asc(f.Read(1)))
            			if len(myByte) = 1 then myByte = "0" & myByte
            			f2.write myByte
            		Loop
            	elseif document.frmPrincipal.vCode(1).checked then
            	'BASE 64
            	  Do While Not f.AtEndOfStream
                	inData = f.read(3)
            		
            		'Create one long from this 3 bytes.
            		'nGroup = &H10000 * Asc(Mid(inData, I, 1)) + &H100 * MyASC(Mid(inData, I + 1, 1)) + MyASC(Mid(inData, I + 2, 1))
            		nGroup = &H10000 * Asc(Mid(inData, 1, 1)) + &H100 * MyASC(Mid(inData, 2, 1)) + MyASC(Mid(inData, 3, 1))
            		
            		'Oct splits the long To 8 groups with 3 bits
            		nGroup = Oct(nGroup)
            		
            		'Add leading zeros
            		nGroup = String(8 - Len(nGroup), "0") & nGroup
            		
            		'Convert To base64
            		pOut = Mid(Base64, CLng("&o" & Mid(nGroup, 1, 2)) + 1, 1) + Mid(Base64, CLng("&o" & Mid(nGroup, 3, 2)) + 1, 1) + Mid(Base64, CLng("&o" & Mid(nGroup, 5, 2)) + 1, 1) + Mid(Base64, CLng("&o" & Mid(nGroup, 7, 2)) + 1, 1)
            		
            		'Add the part To OutPut string
            		sOut = sOut + pOut
            		
            		'Add a new line For Each 76 chars In dest (76*3/4 = 57)
            		'If (I + 2) Mod 57 = 0 Then sOut = sOut + vbCrLf
            	  loop
            	  Select Case Len(inData) Mod 3
            		Case 1: '8 bit final
            		  sOut = Left(sOut, Len(sOut) - 2) + "=="
            		Case 2: '16 bit final
            		  sOut = Left(sOut, Len(sOut) - 1) + "="
            	  End Select
            		f2.write sOut
            	elseif document.frmPrincipal.vCode(2).checked  or document.frmPrincipal.vCode(3).checked then
            	'editor
            		if document.frmPrincipal.vCode(2).checked then isHex = true
            		vReaded = 0
            		vString1 = ""
            		vString2 = ""
            		vString3 = ""
            		f2.writeline "Offset    Bits              Data"
            		Do While Not f.AtEndOfStream
            			vReaded = vReaded +1
            			myByte = asc(f.Read(1))
            			if clng(myByte) < 32 then
            				vString2 = vString2 & "·"
            			else
            				vString2 = vString2 & chr(myByte)
            			end if
            			vString3 = vString3 & space(4-len(cstr(myByte))) & myByte
            			myByte = hex(myByte)
            			if len(myByte) = 1 then myByte = "0" & myByte
            			vString1 = vString1 & myByte & " "
            			if vReaded mod 16 = 0 then
            				if isHex then
            					f2.writeline string(8-len(cstr(hex(vReaded-16))),"0") & hex(vReaded-16) & "  " & vString2 & "  " & vString1
            				else
            					f2.writeline string(8-len(cstr(vReaded-16)),"0") & vReaded-16 & "  " & vString2 & " " & vString3			
            				end if
            				vString1 = ""
            				vString2 = ""
            				vString3 = ""
            			elseif vReaded mod 8 = 0 then
            				vString1 = vString1 & " "
            			end if
            		Loop
            		if isHex then
            			f2.writeline string(8-len(cstr(hex(vReaded-(vReaded mod 16)-1))),"0") & hex(vReaded-(vReaded mod 16)) & "  " & vString2 & space(2+(16-len(vString2))) & vString1
            		else
            			f2.writeline string(8-len(cstr(vReaded-(vReaded mod 16)-1)),"0") & vReaded-(vReaded mod 16) & "  " & vString2 & space(1+(16-len(vString2))) & vString3
            		end if
            	elseif document.frmPrincipal.vCode(4).checked then
            		vCount = 0
            		vChar = "0"
            		vCount2 = 0
            		f2.writeline "On Error Resume Next"
            		f2.writeline "function z(num)"
            		f2.writeline "z=string(num*2,""0"")"
            		f2.writeline "end function"
            		f2.writeline "Set ts = CreateObject(""Scripting.FileSystemObject"").OpenTextFile(""" & vFileOut & ".bin"", 2, True)"
            		f2.write "For x = 1 To 511 Step 2 : ts.Write Chr(Clng(""&H"" & Mid("""
            		Do While Not f.AtEndOfStream
            			myByte = hex(asc(f.Read(1)))
            			if len(myByte) = 1 then myByte = "0" & myByte
            			vCount2 = vCount2 +1
            			if myByte = "00" then
            				vCount = vCount +1
            			else
            				if vCount >= 4 then
            					f2.write """&z(" & vCount & ")&"""
            				else
            					f2.write string(vCount*2,"0")
            				end if
            				vCount = 0
            				f2.write myByte
            			end if
            			if vCount2 mod 256 = 0 then
            				f2.writeline """,x,2))) : Next"
            				f2.write "For x = 1 To 511 Step 2 : ts.Write Chr(Clng(""&H"" & Mid("""
            			end if
            		Loop
            		if vCount >=4 then
            			f2.write """&z(" & vCount & ")&"""
            		else
            			f2.write string(vCount*2,"0")
            		end if
            		
            		f2.writeline """,x,2))) : Next"
            		f2.writeline "ts.Close"
            	end if
            	f.close
            	f2.close
            	document.frmPrincipal.txtNotas.value = document.frmPrincipal.txtNotas.value & vbCrLf & aStrings2(3,vLanguage)
            	msgbox aStrings2(3,vLanguage)
            end if
              
         </SCRIPT>
         <SCRIPT FOR="cmdDecode" EVENT="onClick" LANGUAGE="VBScript">
            Const ForReading = 1, ForWriting = 2, ForAppending = 8
            Const Base64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
            Dim fso, f, Msg
            Set fso = CreateObject("Scripting.FileSystemObject")
            vCancel = false
            if not fso.fileexists(document.frmPrincipal.txtFile.value) then
            	vCancel = true
            else
            	Set f = fso.getfile(document.frmPrincipal.txtFile.value)
            	if f.size > 100*1024 then
            		if msgbox(aStrings2(4,vLanguage),vbYesNo+vbDefaultButton2)=vbNo then vCancel = true
            	end if
            end if
            if not vCancel = true then
            	Set f = fso.OpenTextFile(document.frmPrincipal.txtFile.value, ForReading)
            	if document.frmPrincipal.txtFileOut.value = "" then
            		vFileOut = document.frmPrincipal.txtFile.value & ".bin"
            	else
            		vFileOut = document.frmPrincipal.txtFileOut.value 
            	end if
            	Set f2 = fso.OpenTextFile(vFileOut, ForWriting, True)
            	document.frmPrincipal.txtNotas.value = document.frmPrincipal.txtNotas.value & vbCrLf & document.frmPrincipal.txtFile.value & " -> " & vFileOut
            	if document.frmPrincipal.vCode(0).checked then
            	'HEX
            		Do While Not f.AtEndOfStream
            			f2.write chr(clng("&H" & f.Read(2)))
            		Loop
            	elseif document.frmPrincipal.vCode(1).checked then
            	'BASE 64
                	base64String = f.readall()
            		  'remove white spaces, If any
            	  base64String = Replace(base64String, vbCrLf, "")
            	  base64String = Replace(base64String, vbTab, "")
            	  base64String = Replace(base64String, " ", "")
            	  
            	  'The source must consists from groups with Len of 4 chars
            	  dataLength = Len(base64String)
            	  If dataLength Mod 4 <> 0 Then
            		msgbox "Bad Base64 string."
            	  End If
            	
            	  
            	  ' Now decode each group:
            	  For groupBegin = 1 To dataLength Step 4
            		Dim numDataBytes, CharCounter, thisChar, thisData, nGroup, pOut
            		' Each data group encodes up To 3 actual bytes.
            		numDataBytes = 3
            		nGroup = 0
            	
            		For CharCounter = 0 To 3
            		  ' Convert each character into 6 bits of data, And add it To
            		  ' an integer For temporary storage.  If a character is a '=', there
            		  ' is one fewer data byte.  (There can only be a maximum of 2 '=' In
            		  ' the whole string.)
            	
            		  thisChar = Mid(base64String, groupBegin + CharCounter, 1)
            	
            		  If thisChar = "=" Then
            			numDataBytes = numDataBytes - 1
            			thisData = 0
            		  Else
            			thisData = InStr(1, Base64, thisChar, vbBinaryCompare) - 1
            		  End If
            		  If thisData = -1 Then
            			msgbox "Bad character In Base64 string."
            		  End If
            	
            		  nGroup = 64 * nGroup + thisData
            		Next
            		
            		'Hex splits the long To 6 groups with 4 bits
            		nGroup = Hex(nGroup)
            		
            		'Add leading zeros
            		nGroup = String(6 - Len(nGroup), "0") & nGroup
            		
            		'Convert the 3 byte hex integer (6 chars) To 3 characters
            		pOut = Chr(CByte("&H" & Mid(nGroup, 1, 2))) + _
            		  Chr(CByte("&H" & Mid(nGroup, 3, 2))) + _
            		  Chr(CByte("&H" & Mid(nGroup, 5, 2)))
            		
            		'add numDataBytes characters To out string
            		sOut = sOut & Left(pOut, numDataBytes)
            	  Next
            	
            	  f2.write sOut
            
            		
            		
            		
            	end if
            	f.close
            	f2.close
            	document.frmPrincipal.txtNotas.value = document.frmPrincipal.txtNotas.value & vbCrLf & aStrings2(3,vLanguage)
            	msgbox aStrings2(3,vLanguage)
            
            	end if
            	
         </SCRIPT>
         <SCRIPT FOR="cmdEncode1" EVENT="onClick" LANGUAGE="VBScript">
            on error resume next
            document.frmPrincipal.txtOutputE.value = escape(document.frmPrincipal.txtInputE.value)
              
         </SCRIPT>
         <SCRIPT FOR="cmdEncode2" EVENT="onClick" LANGUAGE="VBScript">
            on error resume next
            document.frmPrincipal.txtOutputE.value = unescape(document.frmPrincipal.txtInputE.value)
              
         </SCRIPT>
         <SCRIPT FOR="cmdEncode3" EVENT="onClick" LANGUAGE="VBScript">
            document.frmPrincipal.txtOutputE.value = doCustomEncode(document.frmPrincipal.txtInputE.value)
         </SCRIPT>
         <SCRIPT FOR="cmdEncode4" EVENT="onClick" LANGUAGE="VBScript">
            document.frmPrincipal.txtInputE.value = doCustomEncode(document.frmPrincipal.txtOutputE.value)
         </SCRIPT>
         <SCRIPT FOR="cmdEncode5" EVENT="onClick" LANGUAGE="VBScript">
            vValues=split(document.frmPrincipal.txtMultiReplace.value,"|")
            for i = 0 to ubound(vValues) step +2
            strNova = strNova & vValues(i+1) & "|" & vValues(i) & "|"
            next
            document.frmPrincipal.txtMultiReplace.value = left(strNova,len(strNova)-1)
         </SCRIPT>
         <SCRIPT FOR="selLanguage" EVENT="onChange" LANGUAGE="VBScript">
            if document.frmPrincipal.selLanguage.value > 0 then setLanguage document.frmPrincipal.selLanguage.value-1
              
         </SCRIPT>
      </form>
      <!-- 
         --------------------------------------------------------------------------------
         ---------------------------- Begin commons section -----------------------------
         --------------------------------------------------------------------------------
         -->
      <SCRIPT LANGUAGE="VBScript">
         dim aStrings(24,3)
         dim aStrings2(5,3)
         dim aObjects(24)
         vLanguage=0
         aObjects(0)="document.frmPrincipal.txtInput.value"
         aObjects(1)="document.frmPrincipal.txtOutput.value"
         aObjects(2)="document.frmPrincipal.txtRetVal.value"
         aObjects(3)="document.frmPrincipal.txtNotas.value"
         aObjects(4)="document.frmPrincipal.cmdEvaluate.value"
         aObjects(5)="document.frmPrincipal.cmdReset.value"
         aObjects(6)="document.frmPrincipal.cmdSample.value"
         aObjects(7)="document.frmPrincipal.cmdRef.value"
         aObjects(8)="document.frmPrincipal.cmdAbout.value"
         aObjects(9)="document.frmPrincipal.cmdQuit.value"
         aObjects(10)="window.document.title"
         aObjects(11)="document.frmPrincipal.cmdUtils.value"
         aObjects(12)="document.frmPrincipal.cmdEncode.value"
         aObjects(13)="document.frmPrincipal.cmdDecode.value"
         aObjects(14)="document.frmPrincipal.cmdEncode1.value"
         aObjects(15)="document.frmPrincipal.cmdEncode2.value"
         aObjects(16)="document.frmPrincipal.cmdEncode3.value"
         aObjects(17)="document.frmPrincipal.selEncode.options(0).text"
         aObjects(18)="document.frmPrincipal.cmdRefresh.value"
         aObjects(19)="document.frmPrincipal.txtInputE.value"
         aObjects(20)="document.frmPrincipal.txtOutputE.value"
         aObjects(21)="document.frmPrincipal.cmdEncode4.value"
         aObjects(22)="document.frmPrincipal.cmdEncode5.value"
         aObjects(23)="document.frmPrincipal.cmdJIT.value"
         
         aStrings(0,0)="'Escriba el código aqui."
         aStrings(0,1)="'Escriu el codi aqui."
         aStrings(0,2)="'Write your code here."
         aStrings(1,0)="Aqui aparecerá la interpretación del mismo."" & vbCrLf & ""Pulse el botón ¿Cómo? para más información."
         aStrings(1,1)="Aqui apareixerà la interpretació del mateix."" & vbCrLf & ""Prem el el botó Com? per a més informació."
         aStrings(1,2)="The output of the interpretation will be displayed here."" & vbCrLf & ""Press the button How-to? for more information."
         aStrings(2,0)=""
         aStrings(2,1)=""
         aStrings(2,2)=""
         aStrings(3,0)="Reservado para tus notas..."
         aStrings(3,1)="Reservat per a les teves notes..."
         aStrings(3,2)="Reserved for your own notes..."
         aStrings(4,0)="Evaluar"
         aStrings(4,1)="Evaluar"
         aStrings(4,2)="Evaluate"
         aStrings(5,0)="Restablecer"
         aStrings(5,1)="Restablir"
         aStrings(5,2)="Reset"
         aStrings(6,0)="¿Cómo?"
         aStrings(6,1)="Com?"
         aStrings(6,2)="How-to?"
         aStrings(7,0)="Referéncia"
         aStrings(7,1)="Referència"
         aStrings(7,2)="Reference"
         aStrings(8,0)="Acerca de..."
         aStrings(8,1)="Sobre..."
         aStrings(8,2)="About"
         aStrings(9,0)="Salir"
         aStrings(9,1)="Sortir"
         aStrings(9,2)="Quit"
         aStrings(10,0)="Intérprete de VBScript"
         aStrings(10,1)="Intèrpret de VBScript"
         aStrings(10,2)="VBScript Interpreter"
         aStrings(11,0)="Utils"
         aStrings(11,1)="Utils"
         aStrings(11,2)="Utils"
         aStrings(12,0)="Codificar archivo"
         aStrings(12,1)="Codificar arxiu"
         aStrings(12,2)="Encode file"
         aStrings(13,0)="Decodificar archivo"
         aStrings(13,1)="Decodificar arxiu"
         aStrings(13,2)="Decode file"
         aStrings(14,0)="Escape"
         aStrings(14,1)="Escape"
         aStrings(14,2)="Escape"
         aStrings(15,0)="Unescape"
         aStrings(15,1)="Unescape"
         aStrings(15,2)="Unescape"
         aStrings(16,0)="Reemplazar según patrón"
         aStrings(16,1)="Reemplaçar segons el patró"
         aStrings(16,2)="Replace by definded pattern"
         aStrings(17,0)="Patrón personaliz."
         aStrings(17,1)="Patró personalitz."
         aStrings(17,2)="Custom pattern:"
         aStrings(18,0)="Recargar intérprete"
         aStrings(18,1)="Recarregar intèrpret"
         aStrings(18,2)="Reload interpreter"
         aStrings(19,0)="Escriba """"aqui"""""" & vbCrLf & ""el texto que desea convertir."
         aStrings(19,1)="Escrigui """"aqui"""""" & vbCrLf & ""el text a convertir."
         aStrings(19,2)="Type """"here"""""" & vbCrLf & ""the text to convert."
         aStrings(20,0)="En este cuadro aparecerá el texto convertido."" & vbCrLf & ""Utilize los botones de la parte inferior para seleccionar el método de conversión."
         aStrings(20,1)="En aquest quadre apareixerà el text convertit."" & vbCrLf & ""Usi els botons de la part inferior per a sel·leccionar el mètode de conversió."
         aStrings(20,2)="In this textbox will appear the converted text."" & vbCrLf & ""Use the buttons at the bottom to select the conversion method."
         aStrings(21,0)="Invertir sentido"
         aStrings(21,1)="Invertir sentit"
         aStrings(21,2)="Down to up"
         aStrings(22,0)="Invertir patrón"
         aStrings(22,1)="Invertir patró"
         aStrings(22,2)="Invert pattern"
         aStrings(23,0)="Depuración"
         aStrings(23,1)="Depuració"
         aStrings(23,2)="Debugging"
         
         
         aStrings2(0,0)="¿Desea continuar?"
         aStrings2(0,1)="Destija continuar?"
         aStrings2(0,2)="Would you like to continue?"
         aStrings2(1,0)="Aqui aparecerá el resultado de evaluar el conenido de txtRetVal" & vbCrLf & "También puede establecr el texto directamente con establaciendo document.frmPrincipal.txtOutput.value" & vbCrLf & "De la misma forma, puede establecer variables y mostrar el contenido de las mismas desde el objeto txtRetVal" & vbCrLf & "El resto de objetos són document.frmPrincipal.txtInput.value y document.frmPrincipal.txtNotas.value" & vbCrLf & "20050701 Por defecto se habilita el control de errores por el própio interprete, para desactivarlo débe comentar la linea 'on error resume next'." & vbCrLf & "20050801 Nueva interfície" & vbCrLf & "20050823 Se agrega la función UItrace(string) para escribir lineas en el texto de salida." & vbCrLf & "20050922 Se agrega interfície multiidioma." & vbCrLf & "20060201 Se agrega función UItracevar(variable) y ejemplo completo con objetos." & vbCrLf & "20060428 Se agregan funciones de reemplazo y otras utilidades." & vbCrLf & "20060826 Se agrega compatibilidad para codificar y decodificar archivos en base 16 y base 64." & vbCrLf & "20061028 Se integra la funcionalidad de activar o desactivar la depuración Just-In-Time y se actualiza el proyecto para su publicación en sourceforge.net"
         aStrings2(1,1)="Aqui apareixerà el resultat d'evaluar el contingut de txtRetVal" & vbCrLf & "També pots establir el text directament establint document.frmPrincipal.txtOutput.value" & vbCrLf & "De la mateixa manera, pots establir variables i mostrar-ne el contingut amb l'objecte txtRetVal" & vbCrLf & "La resta d'objectes són document.frmPrincipal.txtInput.value y document.frmPrincipal.txtNotas.value" 
         aStrings2(1,2)="The output of the interpretation will be displayed here." & vbCrLf & "You may also set the text for the object document.frmPrincipal.txtOutput.value" & vbCrLf & "In the same way, you could set variables and show its content placing them in the txtRetVal object" & vbCrLf & "The other objects are document.frmPrincipal.txtInput.value and document.frmPrincipal.txtNotas.value" 
         aStrings2(2,0)="Josep Valls V. 2003, 2004, 2005, 2006" & vbCrLf & "Visita mi web:" & vbCrLf & "http://josep.valls.name"
         aStrings2(2,1)="Josep Valls V. 2003, 2004, 2005, 2006" & vbCrLf & "Visita la meva web:" & vbCrLf & "http://josep.valls.name"
         aStrings2(2,2)="Josep Valls V. 2003, 2004, 2005, 2006" & vbCrLf & "Visit my web:" & vbCrLf & "http://josep.valls.name"
         aStrings2(3,0)="Codificación/Decodificación completada."
         aStrings2(3,1)="Codificació/Decodificació completada."
         aStrings2(3,2)="Encode/Decode completed."
         aStrings2(4,0)="El archivo és bastante grande, el proceso puede tardar unos minutos durante los que la aplicación parecerá 'colgado'." & vbCrLf & "¿Deseas continuar?"
         aStrings2(4,1)="L'arxiu és bastant gran, el procés pot tardar uns minuts durant els que l'aplicació semblará 'penjada'." & vbCrLf & "Vols continuar?"
         aStrings2(4,2)="The file is quite big, the process may last some minutes while the application will seem 'hung'." & vbCrLf & "Do you really want to continue?"
         aStrings2(5,0)="¿Deseas activar la depuración Just-In-Time?" & vbCrLf & "Pulsa no para desactivarla."
         aStrings2(5,1)="Vols activar la depuració Just-In-Time?" & vbCrLf & "Prem no per a desactivar-la."
         aStrings2(5,2)="Do you like to enable Just-In-Time debugging?" & vbCrLf & "Press no to disable it."
         
         
         sub setLanguage(vLang)
         	for i=0 to UBound(aObjects)-1
         		Execute aObjects(i) & "=""" & aStrings(i,vLang) & """"
         	next
         	vLanguage=vLang
         end sub
         
         function multireplace(strMyText,strMyPattern)
         	strText2 = strMyText
         	vPattern = split(strMyPattern,"|")
         	for i = 0 to ubound(vPattern) step +2
         		strText2 = replace(strText2,vPattern(i),vPattern(i+1))
         	next
         	multireplace = strText2
         end function
         function doCustomEncode(stringEnc)
         	select case document.frmPrincipal.selEncode.value
         	case 0
         		doCustomEncode = multireplace(stringEnc,document.frmPrincipal.txtMultiReplace.value)
         	case 1
         		textTemp = stringEnc
         		textTemp  = replace(textTemp,"""","""""""")
         		textTemp  = replace(textTemp,vbCrLf,""" & vbCrLf & """)
         		doCustomEncode = """" & textTemp & """"	
         	case 2
         		textTemp = stringEnc
         		textTemp  = replace(textTemp,"""","""""""")
         		textTemp  = replace(textTemp,vbCrLf,""" & vbCrLf & _" & vbCrLf & """")
         		doCustomEncode = """" & textTemp & """"	
         	case 3
         		textTemp = stringEnc
         		textTemp  = replace(textTemp,"""""""","""")
         		textTemp  = replace(textTemp,""" & vbCrLf & _" & vbCrLf & """",vbCrLf)
         		textTemp  = replace(textTemp,""" & vbCrLf & """,vbCrLf)
         		doCustomEncode = mid(textTemp,2,len(textTemp)-2)
         	case 4
         		textTemp= multireplace(stringEnc,"&|&amp;|<|&lt;|>|&gt;")
         		textTemp  = replace(textTemp,vbCrLf,"<br>" & vbCrLf)
         		doCustomEncode = textTemp
         	case 5
         		textTemp= multireplace(stringEnc,"&|&amp;|<|&lt;|>|&gt;|¢|&cent;|£|&pound;|¤|&curren;|¥|&yen;|¦|&brvbar;|§|&sect;|¨|&uml;|©|&copy;|ª|&ordf;|«|&laquo;|¬|&not;|­|&shy;|®|&reg;|¯|&macr;|°|&deg;|±|&plusmn;|²|&sup2;|³|&sup3;|´|&acute;|µ|&micro;|¶|&para;|·|&middot;|¸|&cedil;|¹|&sup1;|º|&ordm;|»|&raquo;|¼|&frac14;|½|&frac12;|¾|&frac34;|¿|&iquest;|À|&Agrave;|Á|&Aacute;|Â|&Acirc;|Ã|&Atilde;|Ä|&Auml;|Å|&Aring;|Ç|&Ccedil;|È|&Egrave;|É|&Eacute;|Ê|&Ecirc;|Ë|&Euml;|Ì|&Igrave;|Í|&Iacute;|Î|&Icirc;|Ï|&Iuml;|ð|&eth;|Ñ|&Ntilde;|Ò|&Ograve;|Ó|&Oacute;|Ô|&Ocirc;|Õ|&Otilde;|Ö|&Ouml;|×|&times;|Ø|&Oslash;|Ù|&Ugrave;|Ú|&Uacute;|Û|&Ucirc;|Ü|&Uuml;|Ý|&Yacute;|þ|&thorn;|ß|&szlig;|à|&agrave;|á|&aacute;|â|&acirc;|ã|&atilde;|ä|&auml;|å|&aring;|æ|&aelig;|ç|&ccedil;|è|&egrave;|é|&eacute;|ê|&ecirc;|ë|&euml;|ì|&igrave;|í|&iacute;|î|&icirc;|ï|&iuml;|ð|&eth;|ñ|&ntilde;|ò|&ograve;|ó|&oacute;|ô|&ocirc;|õ|&otilde;|ö|&ouml;|÷|&divide;|ø|&oslash;|ù|&ugrave;|ú|&uacute;|û|&ucirc;|ü|&uuml;|ý|&yacute;|þ|&thorn;|ÿ|&yuml;||&OElig;||&oelig;||&Scaron;||&scaron;||&Yuml;||&circ;||&tilde;||&permil;||&euro;|""|&quot;")
         		textTemp  = replace(textTemp,vbCrLf,"<br>" & vbCrLf)
         		doCustomEncode = textTemp
         	end select
         end function
         Function MyASC(OneChar)
           If OneChar = "" Then MyASC = 0 Else MyASC = Asc(OneChar)
         End Function
      </SCRIPT>
      <SCRIPT FOR="window" EVENT="onLoad" LANGUAGE="VBScript">
         window.resizeto 750,520
         setLanguage(2)
      </SCRIPT>
   </body>
</html>