   User initialisation file for SciTE	
   See https://groups.google.com/forum/#!forum/scite-interest
   Last cleanup Okt 2022 Marcedo@habmalnefrage.de 

Abbrevations
abbreviations.$(file.patterns.cpp)=$(SciteUserHome)/user/cpp.abbrev
abbreviations.$(file.patterns.html)=$(SciteUserHome)/user/html.abbrev
abbreviations.$(file.patterns.haskell)=$(SciteUserHome)/user/haskell.abbrev
abbreviations.$(file.patterns.octave)=$(SciteUserHome)/user/octave.abbrev
abbreviations.$(file.patterns.pascal)=$(SciteUserHome)/user/pascal.abbrev
abbreviations.$(file.patterns.smalltalk)=$(SciteUserHome)/user/smalltalk.abbrev
abbreviations.$(file.patterns.asm)=$(SciteUserHome)/user/asm.abbrev
abbreviations.$(file.patterns.sql)=$(SciteUserHome)/user/sql.abbrev
abbreviations.$(file.patterns.latex)=$(SciteUserHome)/user/latex.abbrev
abbreviations.$(file.patterns.java)=$(SciteUserHome)/user/java.abbrev
abbreviations.$(file.patterns.lua)=$(SciteUserHome)/user/lua.abbrev

Context Menu
#	SciTe Window Messages Docs (IDM_) ... See http://www.scintilla.org/CommandValues.html
user.context.menu=Next File|IDM_NEXTFILE|Prev File|IDM_PREVFILE|

# Keyboard shortcuts
#	Editor context menu and keyboard shortcuts
user.shortcuts=\
Ctrl+PageUp|2333|\
Ctrl+PageDown|2334|\
Ctrl+Alt+V|IDM_PASTEANDDOWN|\
Ctrl+PageUp|IDM_PREVFILE|\
Ctrl+PageDown|IDM_NEXTFILE|\
Alt+Left|IDM_PREVFILE|\
Alt+Right|IDM_NEXTFILE|\
Ctrl+F12|IDM_WRAP|\
KeypadPlus|IDM_EXPAND|\
KeypadMinus|IDM_BLOCK_COMMENT|

# Localisation 
#locale.properties=$(SciteUserHome)/user/translations/locale.de.properties
#translation.missing=***

# Language Menu 
# Gather all settings with a "*language." prefix placed in those dirs
import *
import $(SciteUserHome)\user\*

#	Files with the prefix web.* have their *filter and *source props placed in web.properties (former html.properties)
#	Files with the prefix clike.*  are derived from former (overloaded) cpp.properties for maintainability reasons.
# Arduino, Vala, GO, Pike, Swift, Actionscript
import $(SciteUserHome)/user/clike
import $(SciteUserHome)/user/clike.csharp
import $(SciteUserHome)/user/clike.java+javascript
import $(SciteUserHome)/user/html+php+css
import $(SciteUserHome)/user/web.python
import $(SciteUserHome)/user/web.ruby
import $(SciteUserHome)/user/web.coffeescript
import $(SciteUserHome)/user/web.css
# HTML, Docbook, Mako, VXML
import $(SciteUserHome)/user/basic
import $(SciteUserHome)/user/web
import $(SciteUserHome)/user/xml+yaml+json+asn+sql
import $(SciteUserHome)/user/lua
import $(SciteUserHome)/user/perl
import $(SciteUserHome)/user/sql
import $(SciteUserHome)/user/conf
import $(SciteUserHome)/user/cmake
import $(SciteUserHome)/user/vb
import $(SciteUserHome)/user/rust
import $(SciteUserHome)/user/haskell
# Lisp, Scheme & Clojure
import $(SciteUserHome)/user/lisp
# Scientific / Technically
import $(SciteUserHome)/user/science/matlab+r+spice+vhdl
import $(SciteUserHome)/user/forth
import $(SciteUserHome)/user/fortran
# System Management
import $(SciteUserHome)/user/others
import $(SciteUserHome)/user/shellscripts
import $(SciteUserHome)/user/apache
import $(SciteUserHome)/user/asn1
#Scintillua
import $(SciteUserHome)/user/scintillua
menu.language=$(star *language.)

# These .properties files are not loaded by default. Language support for them might be depreceated in a future Release.
imports.exclude=abaqus asl apdl au3 ave avs blitzbasic dmis csound ecl eiffel escript flagship gap hex inno kix lisp modula3 nimrod nncrontab nsis opal oscript pov powerpro ps purebasic rebol sorcins specman visualprolog

# Theming

#	Choose a theme# here or create your own :)
#import $(SciteUserHome)/user/opt/theme.white
#import $(SciteUserHome)/user/opt/theme.grey
#import $(SciteUserHome)/user/opt/theme.blackblue
import $(SciteUserHome)/user/opt/theme.solarized

[Editor]

#	Set to 1 to strip all trailing whitespace.  
strip.trailing.spaces=0

#	Setting view.whitespace to 1 makes SciTE start up with whitespace visible.
view.whitespace=0
selection.always.visible=1
open.dialog.in.file.directory=1


#	Toolbar
toolbar.visible=0
tabbar.visible=0

#	Shows all occurences of the word under the caret in the current window.
highlight.current.word=1

#	common.lua: try to find out if current Docs charset is Unicode using lpeg
#editor.detect.utf8=1

#	Add magnification to used font size if you are using high Screen resolutions.
magnification=0
output.magnification=-1

#Mods 
#	 Sample for custom Fonts/Styles 
#	Some People prefer all-monospace, others only for Identifiers:
#font.base=$(font.monospace)
font.identifier=$(font.monospace)
lexer.errorlist.escape.sequences=1

#	 common.lua: check the CRC32 Hash for current Releases SciLexer.
SciLexerHash=69655210

# cTags
#	 Made those changable for slower systems.
project.ctags.save_applies=1
project.ctags.list_one=1

# Additional Imports
#	tools.properties .. settings for tools and luamods -to be edited by scripts
import $(SciteUserHome)/tools/tools
