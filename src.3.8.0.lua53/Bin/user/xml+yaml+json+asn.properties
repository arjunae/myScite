# Define Scite settings for XML/vXML, Yaml and Json Files

file.patterns.xml=*.vxml;*.xml;*.xsl;*.svg;*.xul;*.xsd;*.dtd;*.xslt;*.axl;*.xrc;*.rdf*.ent;*.rels;*.kml
lexer.$(file.patterns.xml)=xml

#*language.xml=&XML/vXML|||
*filter.xml=XML ( xml vxml )|$(file.patterns.xml)|\
*source.patterns.xml=$(file.patterns.xml);

api.$(file.patterns.xml)=$(SciteUserHome)/user/languages/xml.api
autocomplete.xml.start.characters=$(chars.alpha)$(chars.numeric)$/
autocomplete.xml.ignorecase=1
autocomplete.xml.choose.single=0
autocomplete.xml.fillups=(

vxml.elements=\
assign audio block break catch choice clear disconnect else elseif \
emphasis enumerate error exit field filled form goto grammar help \
if initial link log menu meta noinput nomatch object option p paragraph \
param phoneme prompt property prosody record reprompt return s say-as \
script sentence subdialog submit throw transfer value var voice vxml

vxml.attributes=\
accept age alphabet anchor application base beep bridge category charset \
classid cond connecttimeout content contour count dest destexpr dtmf dtmfterm \
duration enctype event eventexpr expr expritem fetchtimeout finalsilence \
gender http-equiv id level maxage maxstale maxtime message messageexpr \
method mime modal mode name namelist next nextitem ph pitch range rate \
scope size sizeexpr skiplist slot src srcexpr sub time timeexpr timeout \
transferaudio type value variant version volume xml:lang

keywordclass.vxml=\
$(vxml.elements) $(vxml.attributes) public !doctype

comment.box.start.xml=
comment.stream.start.xml=

# No keyword for xml, as it accepts any keyword
keywords.$(file.patterns.xml)=
#CDATA  	  The value is character data
#(eval|eval|..)  	  The value must be an enumerated value
#ID  	  The value is an unique id
#IDREF  	  The value is the id of another element
#IDREFS 	  The value is a list of other ids
#NMTOKEN  	  The value is a valid XML name
#NMTOKENS  	  The value is a list of valid XML names
#ENTITY  	  The value is an entity
#ENTITIES  	  The value is a list of entities
#NOTATION  	  The value is a name of a notation
#xml:  	  The value is predefined word.characters.$(file.patterns.xml)=$(chars.alpha)$(chars.numeric)_-


# SGML / DTD keywords
keywords6.$(file.patterns.xml)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION

keywords.$(file.patterns.vxml)=$(keywordclass.vxml)
keywords2.$(file.patterns.vxml)=$(keywordclass.javascript)

word.characters.$(file.patterns.vxml)=$(chars.alpha)$(chars.numeric)_-

# XML: eXtensible Markup Language
# For XML, there is no list of known tags or attributes so all are coloured known

word.characters.$(file.patterns.xml)=$(chars.alpha)$(chars.numeric)_-$
comment.stream.start.xml=<!--
comment.stream.end.xml=-->

# Default
style.xml.32=$(colour.default)
style.xml.0=$(colour.userdefinedliterals)
# Tags
style.xml.1=$(colour.keyword2)
# Unknown Tags
style.xml.2=$(colour.identifier)
# Attributes
style.xml.3=$(colour.userdefinedliterals)
# Unknown Attributes
style.xml.4=$(colour.signal)
# Numbers
style.xml.5=$(colour.number)
# Double quoted strings
style.xml.6=$(colour.string)
# Single quoted strings
style.xml.7=$(colour.char)
# Other inside tag
style.xml.8=$(colour.operator)
# Comment
style.xml.9=$(colour.comment.line)
# Entities
style.xml.10=$(colour.default),$(colour.accent.back)
# XML style tag ends '/>'
style.xml.11=$(colour.default),$(colour.accent.back)
# XML identifier start '<?'
style.xml.12=$(colour.operator),$(colour.accent.back)
# XML identifier end '?>'
style.xml.13=$(colour.operator),$(colour.accent.back)
# CDATA
style.xml.17=$(colour.signal),$(font.text),$(colour.accent.back)
# Question
style.xml.18=$(colour.signal),$(colour.accent.back)
# Unquoted Value
style.xml.19=$(colour.signal),$(colour.accent.back)
# SGML tags <! ... >
style.xml.21=$(colour.signal),$(colour.background)
# SGML command
style.xml.22=$(colour.signal),bold,$(colour.background)
# SGML 1st param
style.xml.23=$(colour.string),$(colour.accent.back)
# SGML double string
style.xml.24=$(colour.string),$(colour.accent.back)
# SGML single string
style.xml.25=$(colour.string),$(colour.accent.back)
# SGML error
style.xml.26=$(colour.error),$(colour.accent.back),eolfilled
# SGML special (#xxxx type)
style.xml.27=fore:#33667A,$(colour.accent.back)
# SGML entity
style.xml.28=fore:#333333,$(colour.accent.back)
# SGML comment
style.xml.29=fore:#808000,$(colour.accent.back)
# SGML block
style.xml.31=fore:#222266,$(colour.accent.back)
# No brace matching in XML
braces.xml.style=31


# Define SciTE settings for YAML files.

# associate YAML file patter with the YAML lexer
file.patterns.yaml=*.yaml;*.yml
filter.yaml=YAML (yaml)|$(file.patterns.yaml)|
*filter.yaml=$(filter.yaml)
#*source.patterns.yaml=$(file.patterns.yaml);
lexer.$(file.patterns.yaml)=yaml
#*language.yaml=YAML|yaml||

# YAML requires spaces for tabs
tabsize.$(file.patterns.yaml)=2
indent.size.$(file.patterns.yaml)=2
use.tabs.$(file.patterns.yaml)=0

# YAML comment character
comment.block.yaml=#~

# YAML convertible values
keywords.$(file.patterns.yaml)=true false yes no

# YAML font styles
# default
style.yaml.0=$(colour.default),$(colour.accent.back)
# comment line
style.yaml.1=$(colour.comment.line),$(colour.accent.back)
# value identifier
style.yaml.2=$(colour.keyword2)
# keyword value
style.yaml.3=$(colour.globalclass)
# numerical value
style.yaml.4=$(colour.number)
# reference/repeating value
style.yaml.5=$(colour.keyword),underlined
# document delimiting line
style.yaml.6=$(colour.globalclass),eolfilled
# text block marker
style.yaml.7=$(colour.comment.line)
# syntax error marker
style.yaml.8=$(colour.error),italics
# operator
style.yaml.9=$(colour.operator),bold

# Define SciTE settings for JSON files.

file.patterns.json=*.json;*.eslintrc;*.jshintrc;*.jsonld
*source.patterns.json=$(file.patterns.json);

filter.json=JSON (json eshintrc jshintrc)|$(file.patterns.json)|
*filter.json=$(filter.json)

lexer.$(file.patterns.json)=json

*language.json=JSON|json||

lexer.json.allow.comments=1
lexer.json.escape.sequence=1

# JSON keywords
keywords.$(file.patterns.json)=false true null

# JSON-LD keywords
keywords2.$(file.patterns.json)=@id @context @type @value @language @container \
@list @set @reverse @index @base @vocab @graph

# Default
style.json.0=$(colour.default)
# Number
style.json.1=$(colour.number)
# String
style.json.2=$(colour.string)
# Unclosed string
style.json.3=$(colour.error),$(colour.accent.back),eolfilled
# Property name
style.json.4=$(colour.keyword2)
# Escape sequence
style.json.5=fore:#0B982E
# Line comment
style.json.6=$(colour.comment),italics
# Block comment
style.json.7=$(style.json.6)
# Operator
style.json.8=$(colour.operator)
# URL/IRI
style.json.9=$(colour.userdefinedliterals)
# JSON-LD compact IRI
style.json.10=fore:#B647B6
# JSON keyword
style.json.11=(colour.keyword),bold
# JSON-LD keyword
style.json.12=fore:#EC2806
# Parsing error
style.json.13=back:#990000


# Define SciTE settings for ASN.1 MIB definition files.
# http://www.ietf.org/rfc/rfc2578.txt

filter.asn1=ASN.1 (asn1)|*.mib|

file.patterns.asn1=*.mib

lexer.$(file.patterns.asn1)=asn1

# ASN.1 styles
# Default
style.asn1.0=$(colour.default)
# Comment
style.asn1.1=$(colour.comment.line)
# Identifiers
style.asn1.2=$(colour.identifier),notitalics,$(font.base)
# Double quoted string
style.asn1.3=$(colour.string)
# Numeric OID definition
style.asn1.4=$(colour.number),bold
# Non OID numbers
style.asn1.5=$(colour.number)
# Keywords
style.asn1.6=$(colour.keyword)
# Attributes
style.asn1.7=$(colour.keyword6)
# Descriptors
style.asn1.8=$(colour.keyword2)
# Types
style.asn1.9=$(colour.globalclass)
# Operators
style.asn1.10=$(colour.operator)

# Keywords
keywords.$(file.patterns.asn1)=\
ACCESS AGENT AUGMENTS \
BEGIN BITS \
CAPABILITIES CHOICE COMPLIANCE CONTACT CONVENTION \
DEFINITIONS DEFVAL DESCRIPTION DISPLAY \
END ENTERPRISE EXPORTS \
FALSE FROM \
GROUP GROUPS \
HINT \
IDENTITY IMPLIED IMPORTS INCLUDES INDEX INFO \
LAST \
MANDATORY MAX MIN MODULE \
NOTATION NOTIFICATION NULL \
OBJECTS OBJECT-TYPE OF ORGANIZATION \
PRODUCT \
RELEASE REFERENCE REQUIRES REVISION \
SEQUENCE SIZE STATUS SUPPORTS SYNTAX \
TEXTUAL TRAP TYPE TRAP-TYPE \
UPDATED \
VALUE VARIABLES VARIATION \
WRITE

# Attributes
keywords2.$(file.patterns.asn1)=\
accessible \
create current \
deprecated \
for \
mandatory \
not notify not-accessible \
obsolete only optional \
read read-only read-write \
write

# Descriptors
keywords3.$(file.patterns.asn1)=\
ABSENT ANY APPLICATION \
BIT BOOLEAN BY \
COMPONENT COMPONENTS \
DEFAULT DEFINED \
ENUMERATED EXPLICIT EXTERNAL \
IMPLICIT INIFINITY \
MAX MIN MINUS \
OPTIONAL \
PRESENT PRIVATE \
REAL \
SET \
TAGS TRUE

# Types
keywords4.$(file.patterns.asn1)=\
Counter Counter32 Counter64 \
DisplayString \
Gauge Gauge32 \
IDENTIFIER INTEGER Integer32 IpAddress \
NetworkAddress NsapAddress \
OBJECT OCTET Opaque \
PhysAddress \
STRING \
TimeTicks \
UInteger32 UNITS Unsigned32


